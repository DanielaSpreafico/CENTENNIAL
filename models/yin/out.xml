<?xml version="1.0" encoding="UTF-8"?>
<modules>

<module name="G_874_1_model-Type_Definitions"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Type_Definitions="uri:onf:G_874_1_model-Type_Definitions">
  <namespace uri="uri:onf:G_874_1_model-Type_Definitions"/>
  <prefix value="G_874_1_model-Type_Definitions"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>&lt;p&gt;Version 2.02; outcome of the 10/2013 Nuremberg meeting.&lt;br&gt;Version 2.03; updates for Geneva 03-2014&lt;br&gt;Version 2.04; updates for Shanghai 09-2014&lt;br&gt;Version 2.05; input to Geneva 11-2014&lt;br&gt;Version 2.06; output from Geneva 11-2014&lt;br&gt;Version 2.07; using OpenProfile 3-2015&lt;br&gt;Version 2.08; output from Geneva 06-2015&lt;/p&gt;</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <typedef name="Directionality">
    <description>
      <text>The enumeration with the options for directionality of the termination point.</text>
    </description>
    <type name="enumeration">
      <enum name="SINK"/>
      <enum name="SOURCE"/>
      <enum name="BIDIRECTIONAL"/>
    </type>
  </typedef>
  <typedef name="GccAccess">
    <description>
      <text>This enumeration indicates the GCC access represented by the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="GCC1"/>
      <enum name="GCC2"/>
      <enum name="GCC1_AND_GCC2"/>
    </type>
  </typedef>
  <typedef name="OperationalState">
    <description>
      <text>The list of valid operational states for the connection.</text>
    </description>
    <type name="enumeration">
      <enum name="ENABLED"/>
      <enum name="DISABLED"/>
    </type>
  </typedef>
  <typedef name="OperType">
    <description>
      <text>The operation type associated with the protection mechanism (either non-revertive or revertive).</text>
    </description>
    <type name="enumeration">
      <enum name="REVERTIVE"/>
      <enum name="NON-REVERTIVE"/>
    </type>
  </typedef>
  <typedef name="ExtCmdOperation">
    <description>
      <text>This enumeration contains the options for the actions that instruct the protection system for performing specific protection switching operations.</text>
    </description>
    <type name="enumeration">
      <enum name="EXERCISE"/>
      <enum name="MANUAL_SWITCH"/>
      <enum name="FORCED_SWITCH"/>
      <enum name="LOCKOUT"/>
      <enum name="RELEASE_OF_MANUAL_SWITCH"/>
      <enum name="RELEASE_OF_FORCED_SWITCH"/>
      <enum name="RELEASE_OF_LOCKOUT"/>
    </type>
  </typedef>
  <typedef name="AdministrativeState">
    <description>
      <text>For more information on Administrative State, See ITU-T Recs. X.731 and M.3100.</text>
    </description>
    <type name="enumeration">
      <enum name="UNLOCKED"/>
      <enum name="LOCKED"/>
      <enum name="SHUTTING_DOWN"/>
    </type>
  </typedef>
  <typedef name="OCTk_NimKBitRate">
    <description>
      <text>Provides an enumeration with the meaning of each 'k' value.</text>
    </description>
    <type name="enumeration">
      <enum name="2.5_G"/>
      <enum name="10_G"/>
      <enum name="40_G"/>
      <enum name="100_G"/>
    </type>
  </typedef>
  <typedef name="TimDetMo">
    <description>
      <text>List of modes for trace identifier mismatch detection.</text>
    </description>
    <type name="enumeration">
      <enum name="DAPI"/>
      <enum name="SAPI"/>
      <enum name="BOTH"/>
    </type>
  </typedef>
  <typedef name="OCTk_NimProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="LOS_P"/>
      <enum name="OCI"/>
      <enum name="SSF_P"/>
      <enum name="SSF_O"/>
      <enum name="SSF"/>
      <enum name="TIM"/>
      <enum name="DEG"/>
      <enum name="BDI"/>
    </type>
  </typedef>
  <typedef name="TcmMonitoring">
    <description>
      <text>Monitoring types for the tandem connection monitoring function.</text>
    </description>
    <type name="enumeration">
      <enum name="INTRUSIVE"/>
      <enum name="NON-INTRUSIVE"/>
    </type>
  </typedef>
  <typedef name="TcmMode">
    <description>
      <text>List of value modes for the sink side of the tandem connection monitoring function.</text>
    </description>
    <type name="enumeration">
      <enum name="OPERATIONAL"/>
      <enum name="TRANSPARENT"/>
      <enum name="MONITOR"/>
    </type>
  </typedef>
  <typedef name="OPSMnk_TtpKBitRate">
    <description>
      <text>Provides an enumeration with the meaning of each 'k' value.</text>
    </description>
    <type name="enumeration">
      <enum name="40_G"/>
      <enum name="100_G"/>
    </type>
  </typedef>
  <typedef name="OPSMnk_TtpProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="LOS"/>
      <enum name="LOL"/>
    </type>
  </typedef>
  <typedef name="OPSn_TtpProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="LOS"/>
    </type>
  </typedef>
  <typedef name="OTM_n_KBitRates">
    <description>
      <text>Provides an enumeration with the meaning of each 'k' value.</text>
    </description>
    <type name="enumeration">
      <enum name="2.5_G"/>
      <enum name="10_G"/>
      <enum name="40_G"/>
      <enum name="2.5_10_G"/>
      <enum name="10_40_G"/>
      <enum name="2.5_10_40_G"/>
    </type>
  </typedef>
  <typedef name="DomainInterface">
    <description>
      <text>This enumeration provides the options for the interface associated with OTMn.</text>
    </description>
    <type name="enumeration">
      <enum name="INTRA_DOMAIN"/>
      <enum name="INTER_DOMAIN"/>
    </type>
  </typedef>
  <typedef name="OTM_n_OpticalReach">
    <description>
      <text>The valid options for reach of the optical cable.</text>
    </description>
    <type name="enumeration">
      <enum name="INTRA_OFFICE"/>
      <enum name="SHORTHAUL"/>
      <enum name="LONGHAUL"/>
    </type>
  </typedef>
  <typedef name="AprStatus">
    <description>
      <text>The enumeration of the options for the Automatic Power Reduction Status.</text>
    </description>
    <type name="enumeration">
      <enum name="ON"/>
      <enum name="OFF"/>
    </type>
  </typedef>
  <typedef name="OTSn_TtpProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="BDI_P"/>
      <enum name="BDI_O"/>
      <enum name="BDI"/>
      <enum name="TIM"/>
      <enum name="LOS_P"/>
      <enum name="LOS_O"/>
      <enum name="LOS"/>
    </type>
  </typedef>
  <typedef name="OTUk_CtpAdaptation">
    <description>
      <text>The adaptation options for OTUk_ConnectionTermationPoints.</text>
    </description>
    <type name="enumeration">
      <enum name="REGULAR"/>
      <enum name="NONE"/>
      <enum name="VENDOR_SPECIFIC"/>
      <enum name="FUNCTIONALLY_STANDARDIZED"/>
    </type>
  </typedef>
  <typedef name="OTUk_CtpKBitRate">
    <description>
      <text>Provides an enumeration with the meaning of each 'k' value.</text>
    </description>
    <type name="enumeration">
      <enum name="2.5_G"/>
      <enum name="10_G"/>
      <enum name="40_G"/>
      <enum name="100_G"/>
    </type>
  </typedef>
  <typedef name="OTUk_CtpProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="LOF"/>
      <enum name="AIS"/>
      <enum name="LOM"/>
    </type>
  </typedef>
  <typedef name="OTUk_TtpProblemList">
    <description>
      <text>The valid list of problems for the entity.</text>
    </description>
    <type name="enumeration">
      <enum name="TIM"/>
      <enum name="DEG"/>
      <enum name="BDI"/>
      <enum name="SSF"/>
    </type>
  </typedef>
  <typedef name="MonitoredDirection">
    <description>
      <text>The enumeration with the options for directionality for nonintrusive monitoring.</text>
    </description>
    <type name="enumeration">
      <enum name="SINK"/>
      <enum name="SOURCE"/>
    </type>
  </typedef>
  <typedef name="DegThrType">
    <description>
      <text>&lt;p&gt;The value of the threshold can be provisioned in terms of number of errored blocks or in terms of percentage of errored blocks. For percentage-based specification, in order to support provision of less than 1%, the specification consists of two fields. The first field indicates the granularity of percentage. For examples, in 1%, in 0.1%, or in 0.01%, etc. The second field indicates the multiple of the granularity. For number of errored block based, the value is a positive integer.&lt;/p&gt;</text>
    </description>
    <type name="enumeration">
      <enum name="PERCENTAGE"/>
      <enum name="NUMBER_ERRORED_BLOCKS"/>
    </type>
  </typedef>
  <typedef name="LinkType">
    <type name="enumeration">
      <enum name="DWDM"/>
      <enum name="CWDM"/>
      <enum name="NO_WDM"/>
    </type>
  </typedef>
  <typedef name="ApplicationIdentifierType">
    <type name="enumeration">
      <enum name="STANDARD"/>
      <enum name="PROPRIETARY"/>
    </type>
  </typedef>
  <typedef name="PrintableString">
    <type name="string"/>
  </typedef>
  <typedef name="DateAndTime">
    <description>
      <text>This primitive type defines the date and time according to the following structure:
'yyyyMMddhhmmss.s[Z|{+|-}HHMm]' where:
yyyy    '0000'..'9999'    year
MM        '01'..'12'            month
dd        '01'..'31'            day
hh        '00'..'23'            hour
mm        '00'..'59'            minute
ss        '00'..'59'            second
s        '.0'..'.9'            tenth of second (set to '.0' if EMS or NE cannot support this granularity)
Z        'Z'                    indicates UTC (rather than local time)
{+|-}    '+' or '-'            delta from UTC
HH        '00'..'23'            time zone difference in hours
Mm        '00'..'59'            time zone difference in minutes.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="ApsChannel">
    <type name="enumeration">
      <enum name="PATH"/>
      <enum name="TCM1"/>
      <enum name="TCM2"/>
      <enum name="TCM3"/>
      <enum name="TCM4"/>
      <enum name="TCM5"/>
      <enum name="TCM6"/>
      <enum name="SECTION"/>
    </type>
  </typedef>
  <typedef name="BitString">
    <description>
      <text>This primitive type defines a bit oriented string.
The size of the BitString will be defined in the valueRange property of the attribute; according to ASN.1 (X.680).
The semantic of each bit position will be defined in the Documentation field of the attribute.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="DelayMeasurementRole">
    <type name="enumeration">
      <enum name="CONTROLLER"/>
      <enum name="RESPONDER"/>
    </type>
  </typedef>
  <typedef name="ResizeOperationType">
    <type name="enumeration">
      <enum name="INCREASE_BW"/>
      <enum name="DECREASE_BW"/>
    </type>
  </typedef>
  <typedef name="GranularityPeriodType">
    <description>
      <text>The enumeration with the options for granularity period of the performance data.</text>
    </description>
    <type name="enumeration">
      <enum name="UNKNOWN"/>
      <enum name="PERIOD_15MIN"/>
      <enum name="PERIOD_24HOURS"/>
    </type>
  </typedef>
</module>


<module name="MicrowaveModel-ObjectClasses-AirInterfaceHsb"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-AirInterfaceHsb="uri:onf:MicrowaveModel-ObjectClasses-AirInterfaceHsb"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-AirInterfaceHsb"/>
  <prefix value="MicrowaveModel-ObjectClasses-AirInterfaceHsb"/>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-09">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="MW_AirInterfaceHsbEndPoint_Pac">
    <description>
      <text>The EndPoint (EP) object class models the access to the FC function. Each EndPoint instance has a role (e.g., working, protection, protected, hub, spoke, leaf, root, etc.) with respect to the FC function. The association of the FC to LTPs is made via EndPoints (essentially the ports of the FC) where each EndPoint (EP) of the FC has a role in the context of the FC. The traffic forwarding between the associated End PointsEPs of the FC depends upon the type of FC and may be associated with FCSwitch object instances. In cases where there is protection conveys the protecting role of the access to the FC.  The EP replaces the Protection Unit of a traditional protection model. It represents a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.</text>
    </description>
    <key value="endpoint"/>
    <config value="true"/>
    <leaf name="role">
      <type name="MicrowaveModel-TypeDefinitions:roleType"/>
    </leaf>
    <leaf name="endpoint">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:ForwardingConstruct/CoreModel-CoreNetworkModule-ObjectClasses:_fcPortList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf>
  </list>
  <list name="MW_AirInterfaceHsbFcSwitch_Pac">
    <description>
      <text>Represents and defines a protection switch structure encapsulated in the forwarding construct. Essentially performs the function of Protection Group. Associates to 2 or more Endpoints each playing the role of a Protection Unit. One or more protection EndPoints (standby/backup) provide protection for one or more working (i.e. regular/main/preferred) Endpoints where either protection or working can feed one or more protected Endpoint. May be used in revertive or non-revertive (symmetric) mode. When in revertive mode may define waitToRestore time. May be used in one of several modes including source switch, destination switched, source and destination switched etc (covering cases such as  1+1 ane 1:1).  May be lockout (prevented from switching), force switched or manual switched. Will indicate switch state and change of state.</text>
    </description>
    <key value="fcswitch"/>
    <config value="true"/>
    <leaf name="protType">
      <type name="MicrowaveModel-TypeDefinitions:protectionType"/>
      <description>
        <text>Indicates the protection scheme that is used for the ProtectionGroup.</text>
      </description>
    </leaf>
    <leaf name="airInterfaceHsbConfigurationIsFaultySeverity">
      <type name="MicrowaveModel-TypeDefinitions:severityType"/>
      <description>
        <text>The level of severity of an airInterfaceHsbConfigurationIsFaulty alarm shall be chosen from an enumeration.</text>
      </description>
    </leaf>
    <leaf name="airInterfaceHsbIsPartlyDownSeverity">
      <type name="MicrowaveModel-TypeDefinitions:severityType"/>
      <description>
        <text>The level of severity for one link out of the HSB configuration being down shall be chosen from an enumeration.</text>
      </description>
    </leaf>
    <leaf name="airInterfaceHsbIsDownSeverity">
      <type name="MicrowaveModel-TypeDefinitions:severityType"/>
      <description>
        <text>The level of severity of the total HSB configuration being down shall be chosen from an enumeration.</text>
      </description>
    </leaf>
    <leaf name="fcswitch">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:ForwardingConstruct/CoreModel-CoreNetworkModule-ObjectClasses:_fcSwitchList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf>
  </list>
</module>


<module name="CoreModel-CoreFoundationModule-TypeDefinitions"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions"/>
  <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-01">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <typedef name="DateAndTime">
    <description>
      <text>This primitive type defines the date and time according to the following structure:
'yyyyMMddhhmmss.s[Z|{+|-}HHMm]' where:
yyyy    '0000'..'9999'    year
MM        '01'..'12'            month
dd        '01'..'31'            day
hh        '00'..'23'            hour
mm        '00'..'59'            minute
ss        '00'..'59'            second
s        '.0'..'.9'            tenth of second (set to '.0' if EMS or NE cannot support this granularity)
Z        'Z'                    indicates UTC (rather than local time)
{+|-}    '+' or '-'            delta from UTC
HH        '00'..'23'            time zone difference in hours
Mm        '00'..'59'            time zone difference in minutes.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="BitString">
    <description>
      <text>This primitive type defines a bit oriented string.
The size of the BitString will be defined in the valueRange property of the attribute; according to ASN.1 (X.680).
The semantic of each bit position will be defined in the Documentation field of the attribute.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="Real">
    <description>
      <text>This primitive type maps to the 'realnumber' defined in Recommendation X.680.</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="PrintableString">
    <description>
      <text>A string that only includes printable characters</text>
    </description>
    <type name="string"/>
  </typedef>
</module>


<module name="CoreModel-CoreNetworkModule-TypeDefinitions"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreNetworkModule-TypeDefinitions="uri:onf:CoreModel-CoreNetworkModule-TypeDefinitions">
  <namespace uri="uri:onf:CoreModel-CoreNetworkModule-TypeDefinitions"/>
  <prefix value="CoreModel-CoreNetworkModule-TypeDefinitions"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <typedef name="OperType">
    <description>
      <text>The operation type associated with the protection mechanism (either non-revertive or revertive).</text>
    </description>
    <type name="enumeration">
      <enum name="REVERTIVE"/>
      <enum name="NON-REVERTIVE"/>
    </type>
  </typedef>
  <typedef name="LayerProtocolName">
    <description>
      <text>Provides a controlled list of layer protocol names and indicates the naming authority.
Note that it is expected that attributes will be added to this structure to convey the naming authority name, the name of the layer protocol using a human readable string and any particular standard reference.
Layer protocol names include:
-    Layer 1 (L1): OTU, ODU
-    Layer 2 (L2): Carrier Grade Ethernet (ETY, ETH), MPLS-TP (MT)
lifecycle:Preliminary</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="PortRole">
    <description>
      <text>The role of a port in the context of the function of the forwarding entity that it bounds
lifecycle:Preliminary</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="PortDirection">
    <description>
      <text>The orientation of flow at the Port of a Forwarding entity</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="INPUT"/>
      <enum name="OUTPUT"/>
      <enum name="UNIDENTIFIED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="ForwardingDirection">
    <description>
      <text>The directionality of a Forwarding entity.</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="UNIDIRECTIONAL"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="TerminationDirection">
    <description>
      <text>The directionality of a termination entity</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="SINK"/>
      <enum name="SOURCE"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
    </type>
  </typedef>
  <typedef name="ExtendedTerminationDirection">
    <description>
      <text>Extended to include contra-direction considerations. Only applies to LP and elements of LP not to LTP??
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="BIDIRECTIONAL"/>
      <enum name="SINK"/>
      <enum name="SOURCE"/>
      <enum name="UNDEFINED_OR_UNKNOWN"/>
      <enum name="CONTRA_DIRECTION_SINK"/>
      <enum name="CONTRA_DIRECTION_SOURCE"/>
    </type>
  </typedef>
  <typedef name="ProtectionType">
    <description>
      <text>Identifies the type of rotection of an FcSwitch.
lifecycle:Experimental</text>
    </description>
    <type name="string"/>
  </typedef>
  <typedef name="TerminationState">
    <description>
      <text>Provides support for the range of behaviours and specific states that an LP can take with respect to termination of the signal.
Indicates to what degree the LayerTermination is terminated.
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="LP_CAN_NEVER_TERMINATE"/>
      <enum name="LT_NOT_TERMINATED"/>
      <enum name="TERMINATED_SERVER_TO_CLIENT_FLOW"/>
      <enum name="TERMINATED_CLIENT_TO_SERVER_FLOW"/>
      <enum name="TERMINATED_BIDIRECTIONAL"/>
      <enum name="LT_PERMENANTLY_TERMINATED"/>
      <enum name="TERMINATION_STATE_UNKNOWN"/>
    </type>
  </typedef>
</module>


<module name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:CoreModel-CoreFoundationModule-StateModel="uri:onf:CoreModel-CoreFoundationModule-StateModel">
  <namespace uri="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  <import module="CoreModel-CoreFoundationModule-StateModel">
    <prefix value="CoreModel-CoreFoundationModule-StateModel"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="Name">
    <description>
      <text>Name: A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.</text>
    </description>
    <list name="nameList">
      <description>
        <text>List of names.</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="GlobalClass">
    <description>
      <text>Represents a type of thing (an Entity) that has instances which can exist in their own right (independently of any others).
Entity: Has identity, defined boundary, properties, functionality and lifecycle in a global context.
(consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable Entity Feature)</text>
    </description>
    <uses name="Name"/>
    <uses name="Label"/>
    <uses name="Extension"/>
    <uses name="CoreModel-CoreFoundationModule-StateModel:State_Pac"/>
    <list name="localIdList">
      <description>
        <text>An identifier that is unique in the context of some scope that is less than the global scope.
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself unique, and immutable. The identifier therefore represents the identity of the entity/role. An identifier carries no semantics with respect to the purpose of the entity.)</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>UUID: An identifier that is universally unique
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself globally unique, and immutable. An identifier carries no semantics with respect to the purpose or state of the entity)</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LocalClass">
    <description>
      <text>A LocalClass represents a Feature of an Entity. It is inseparable from a GlobalClass but is a distinct feature of that GlobalClass such that the instances of LocalClass are able to have associations to other instances..
Feature of an Entity: An inseparable, externally distinguishable part of an entity.
The mandatory LocalId of the LocalClass instance is unique in the context of the GlobalClass from which it is inseparable.
(consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable feature of an entity)
</text>
    </description>
    <uses name="Name"/>
    <uses name="Label"/>
    <uses name="Extension"/>
    <uses name="CoreModel-CoreFoundationModule-StateModel:State_Pac"/>
    <list name="localIdList">
      <description>
        <text>An identifier that is unique in the context of some scope that is less than the global scope.
(consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself unique, and immutable. The identifier therefore represents the identity of the entity/role. An identifier carries no semantics with respect to the purpose of the entity.)</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
      <min-elements value="1"/>
    </list>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>A global identifier for the LocalClass, which is used as reference.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="Label">
    <description>
      <text>A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.</text>
    </description>
    <list name="labelList">
      <description>
        <text>List of labels.</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
  </grouping>
  <grouping name="Extension">
    <description>
      <text>Extension provides an opportunity to define properties not declared in the class that extend the class enabling a realization with simple ad-hoc extension of standard classes to be conformant.</text>
    </description>
    <list name="extensionList">
      <description>
        <text>List of simple name-value extentions</text>
      </description>
      <key value="valueName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NameAndValue"/>
    </list>
  </grouping>
  <grouping name="UniversalIdAuthority">
    <description>
      <text>Represents the authority that controls the allocation of UUIDs.
lifecycle:Preliminary</text>
    </description>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>The UUID for the UUID authority.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="NameAndValueAuthority">
    <description>
      <text>Represents the authority that controls the legal valuse for the names and values of a name/value attribute.
lifecycle:Preliminary</text>
    </description>
    <leaf name="uuid">
      <type name="UniversalId"/>
      <description>
        <text>The UUID for the NameValueAuthority.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="ConditionalPackage">
    <description>
      <text>The base class for conditional packages.
lifecycle:Experimental</text>
    </description>
    <uses name="Extension"/>
    <uses name="Label"/>
  </grouping>
  <grouping name="NameAndValue">
    <description>
      <text>A scoped name-value pair</text>
    </description>
    <leaf name="valueName">
      <type name="string"/>
      <description>
        <text>The name of the value. The value need not have a name.</text>
      </description>
    </leaf>
    <leaf name="value">
      <type name="string"/>
      <description>
        <text>The value</text>
      </description>
    </leaf>
  </grouping>
  <typedef name="UniversalId">
    <description>
      <text>The univeral ID value where the mechanism for generation is defned by some authority not directly referenced in the structure.</text>
    </description>
    <type name="string"/>
  </typedef>
</module>


<module name="MicrowaveModel-ObjectClasses-AirInterfaceDiversity"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-AirInterfaceDiversity="uri:onf:MicrowaveModel-ObjectClasses-AirInterfaceDiversity"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-AirInterfaceDiversity"/>
  <prefix value="MicrowaveModel-ObjectClasses-AirInterfaceDiversity"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="MW_AirInterfaceDiversity_Pac">
    <description>
      <text>LTP(MWS-CTP-xD)</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="airInterfaceDiversityCapability">
      <config value="false"/>
      <uses name="AirInterfaceDiversityCapability"/>
    </container>
    <container name="airInterfaceDiversityConfiguration">
      <config value="true"/>
      <uses name="AirInterfaceDiversityConfiguration"/>
    </container>
    <container name="airInterfaceDiversityStatus">
      <config value="false"/>
      <uses name="AirInterfaceDiversityStatus"/>
    </container>
    <container name="airInterfaceDiversityCurrentProblems">
      <config value="false"/>
      <uses name="AirInterfaceDiversityCurrentProblems"/>
    </container>
    <container name="airInterfaceDiversityCurrentPerformance">
      <config value="false"/>
      <uses name="AirInterfaceDiversityCurrentPerformance"/>
    </container>
    <container name="airInterfaceDiversityHistoricalPerformances">
      <config value="false"/>
      <uses name="AirInterfaceDiversityHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="AirInterfaceDiversityCapability">
    <description>
      <text>Describes the capabilities in implementing different types of air interface diversity.</text>
    </description>
    <list name="availableKindsOfDiversity">
      <description>
        <text>Available types of diversity to be listed.</text>
      </description>
      <key value="diversityName"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:diversityType"/>
    </list>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:'airInterfaceDiversityConfigurationIsPartlyDown' (at least one air interface is down, but not all of them) and 'airInterfaceDiversityConfigurationIsDown' (all air interfaces are down). Further alarms might be added by the device. Names are to be separated by commas.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="AirInterfaceDiversityConfiguration">
    <container name="airInterfaceDiversity">
      <description>
        <text>Type of air interface diversity configured at the link.</text>
      </description>
      <config value="true"/>
      <uses name="MicrowaveModel-TypeDefinitions:diversityType"/>
    </container>
    <leaf-list name="airInterfaceLtpList">
      <description>
        <text>_multiplicity:2-ThisAirInterfaceDiversity::AirInterfaceDiversityConfiguration::airInterfaceDiversity::diversityType::numberOfAirInterfacesMax</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <min-elements value="2"/>
    </leaf-list>
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceDiversityProblemSeverityType"/>
      <min-elements value="3"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceDiversityStatus">
    <leaf name="snirCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Currently measured signal to (noise+interference) ratio of the combined signals.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="airInterfaceDiversityStatus">
      <type name="MicrowaveModel-TypeDefinitions:airInterfaceDiversityStatusType"/>
      <config value="false"/>
      <description>
        <text>Status of the air interface bundle. </text>
      </description>
      <default value="groupDown"/>
    </leaf>
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time the Diversity Group entered its current operational status. 
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
      <default value="20101120140000.0Z+1"/>
    </leaf>
  </grouping>
  <grouping name="AirInterfaceDiversityCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceDiversityCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceDiversityCurrentPerformance">
    <description>
      <text>Aggregated performance information of the air interface diversity configuration at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <description>
        <text>At least values of the counters, which are reset every 15 minutes, are to be provided. If available, the current values of the counters, which are reset every 24 hour, can be provided, too.</text>
      </description>
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceDiversityCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceDiversityHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the air interface diversity configuration for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceDiversityHistoricalPerformanceType"/>
    </list>
  </grouping>
</module>


<module name="MicrowaveModel-ObjectClasses-PureEthernetStructure"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-PureEthernetStructure="uri:onf:MicrowaveModel-ObjectClasses-PureEthernetStructure"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-PureEthernetStructure"/>
  <prefix value="MicrowaveModel-ObjectClasses-PureEthernetStructure"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <feature name="pure-ethernet">
    <description>
      <text>Feature 'pure-ethernet' is mandatory for device types transporting pure Ethernet.</text>
    </description>
  </feature>
  <list name="MW_PureEthernetStructure_Pac">
    <description>
      <text>LTP(MWS-TTP)
The pureEthernetStructure_Pac and its attached classes MUST be provided on management interfaces of microwave devices, which are transporting Ethernet traffic only.</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="pureEthernetStructureCapability">
      <config value="false"/>
      <uses name="PureEthernetStructureCapability"/>
    </container>
    <container name="pureEthernetStructureConfiguration">
      <config value="true"/>
      <uses name="PureEthernetStructureConfiguration"/>
    </container>
    <container name="pureEthernetStructureStatus">
      <config value="false"/>
      <uses name="PureEthernetStructureStatus"/>
    </container>
    <container name="pureEthernetStructureCurrentProblems">
      <config value="false"/>
      <uses name="PureEthernetStructureCurrentProblems"/>
    </container>
    <container name="pureEthernetStructureCurrentPerformance">
      <config value="false"/>
      <uses name="PureEthernetStructureCurrentPerformance"/>
    </container>
    <container name="pureEthernetStructureHistoricalPerformances">
      <config value="false"/>
      <uses name="PureEthernetStructureHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="PureEthernetStructureCapability">
    <description>
      <text>Describes the logical structuring of the physical capacity provided by a pure Ethernet microwave device.
Segmentation is not available.
No fixed segment size.
No TDM transport.</text>
    </description>
    <leaf name="structureId">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <config value="false"/>
      <description>
        <text>Identifies the Structure for bundling and container.</text>
      </description>
    </leaf>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:non. Names are to be separated by commas. Further alarms might be added by the device.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="PureEthernetStructureConfiguration">
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the type of problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureProblemSeverityType"/>
    </list>
  </grouping>
  <grouping name="PureEthernetStructureStatus">
    <container name="segmentStatusList">
      <description>
        <text>Status of the Ethernet transport segment.
Always just one segment.</text>
      </description>
      <uses name="MicrowaveModel-TypeDefinitions:segmentStatusType"/>
    </container>
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time and date of the last update of the status information.
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="PureEthernetStructureCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="PureEthernetStructureCurrentPerformance">
    <description>
      <text>Aggregated performance information of the structure of an pure Ethernet microwave at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <description>
        <text>At least values of the counters, which are reset every 15 minutes, are to be provided. If available, the current values of the counters, which are reset every 24 hour, can be provided, too.</text>
      </description>
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="PureEthernetStructureHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the structure of an pure Ethernet microwave for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureHistoricalPerformanceType"/>
    </list>
  </grouping>
</module>


<module name="G_874_1_model-Imported_Information_Object_Classes-X_721"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-X_721="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_721"
        xmlns:G_874_1_model-Imported_Data_Types="uri:onf:G_874_1_model-Imported_Data_Types">
  <namespace uri="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_721"/>
  <prefix value="G_874_1_model-Imported_Information_Object_Classes-X_721"/>
  <import module="G_874_1_model-Imported_Data_Types">
    <prefix value="G_874_1_model-Imported_Data_Types"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="X_721_Top">
    <description>
      <text>This is the top level of managed object class hierarchy and every other managed object class is a specialization of either this generic class (top) or a specialization of subclass of top. The parameter miscellaneousError is to be used when a processing failure has occurred and the error condition encountered does not match any of object's defined specific error types.</text>
    </description>
    <leaf name="objectClass">
      <type name="G_874_1_model-Imported_Data_Types:ObjectIdentifier"/>
      <description>
        <text>ObjectClass ::= CHOICE{    globalForm    [0] OBJECT IDENTIFIER,
localForm    [1] INTEGER}</text>
      </description>
    </leaf>
    <leaf name="nameBinding">
      <type name="G_874_1_model-Imported_Data_Types:ObjectIdentifier"/>
    </leaf>
  </grouping>
</module>


<module name="CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:CoreModel-CoreNetworkModule-TypeDefinitions="uri:onf:CoreModel-CoreNetworkModule-TypeDefinitions">
  <namespace uri="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"/>
  <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="CoreModel-CoreNetworkModule-TypeDefinitions">
    <prefix value="CoreModel-CoreNetworkModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-11">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="ForwardingDomain">
    <description>
      <text>The ForwardingDomain (FD) object class models the topological component which represents the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points represented by the LTP in the model.
The FD object provides the context for instructing the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding. 
The LTPs available are those defined at the boundary of the FD.
At a lowere level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). 
Note that an NE can encompass multiple switch matrices (FDs) and the FD representing the switch matrix can be further partitioned.
</text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="layerProtocolNameList">
      <description>
        <text>One or more protocol layers at which the FD represents the opportunity to enable forwarding between LTP that bound it.</text>
      </description>
      <ordered-by value="system"/>
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <min-elements value="1"/>
    </leaf-list>
    <leaf-list name="_lowerLevelFdRefList">
      <description>
        <text>The FD object class supports a recursive aggregation relationship (HigherLevelFdEncompassesLowerLevelFds) such that the internal construction of an FD can be exposed as multiple lower level FDs and associated Links (partitioning).
The aggregated FDs and Links form an interconnected topology that provides and describes the capability of the aggregating FD.
Note that the model actually represents aggregation of lower level FDs into higher level FDs as views rather than FD partition, and supports multiple views. 
Aggregation allow reallocation of capacity from lower level FDs to different higher level FDs as if the network is reorganized  (as the association is aggregation not composition).</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_fdRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="_fcRefList">
      <description>
        <text>An FD contains one or more FCs. A contained FC connects LTPs that bound the FD.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:ForwardingConstruct/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="_ltpRefList">
      <description>
        <text>An instance of FD is associated with zero or more LTP objects. 
The LTPs that bound the FD provide capacity for forwarding.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
  </grouping>
  <list name="ForwardingConstruct">
    <key value="uuid"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="ForwardingConstruct"/>
  </list>
  <grouping name="ForwardingConstruct">
    <description>
      <text>The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs at a particular specific layerProtocol.
Like the LTP the FC supports any transport protocol including all circuit and packet forms.
It is used to effect forwarding of transport characteristic (layer protocol) information.
An FC can be in only one FD.
The ForwardingConstruct is a Forwarding entity.
At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances.
The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structure for linear, ring or mesh protection schemes.</text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf name="layerProtocolName">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <description>
        <text>The layerProtocol at which the FC enables potential for forwarding.</text>
      </description>
    </leaf>
    <leaf-list name="_lowerLevelFcRefList">
      <description>
        <text>An FC object supports a recursive aggregation relationship such that the internal construction of an FC can be exposed as multiple lower level FC objects (partitioning).
Aggregation is used as for the FD to allow changes in hierarchy.
</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:ForwardingConstruct/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <list name="_fcPortList">
      <description>
        <text>The association of the FC to LTPs is made via FcPorts (essentially the ports of the FC).</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="FcPort"/>
      <min-elements value="2"/>
    </list>
    <list name="_fcSwitchList">
      <description>
        <text>If an FC exposes protection (having two FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects.
The arrangement of switches for a particular instance is described by a referenced FcSpec</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="FcSwitch"/>
    </list>
    <leaf name="forwardingDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:ForwardingDirection"/>
      <description>
        <text>The directionality of the ForwardingConstruct. 
Is applicable to simple ForwardingConstructs where all FcPorts are BIDIRECTIONAL (the ForwardingConstruct will be BIDIRECTIONAL) or UNIDIRECTIONAL (the ForwardingConstruct will be UNIDIRECTIONAL). 
Is not present in more complex cases.</text>
      </description>
    </leaf>
  </grouping>
  <container name="NetworkElement">
    <presence value="Enables ONF CoreModel support"/>
    <description>
      <text>The Network Element (NE) object class represents a network element (traditional NE) in the data plane.
A data plane network element is essentially a consolidation of capabilities that can be viewed and controlled through a 'single' management-control port.
In the direct interface from an SDN controller to a network element in the data plane, the NetworkElement object defines the scope of control for the resources within the network element
For example internal transfer of user information between the external terminations (ports of the NE), encapsulation, multiplexing/demultiplexing, and OAM functions, etc. 
The NetworkElement provides the scope of the naming space for identifying objects representing the resources within the data plane network element.
NE is really a product bundling or some view of management scope, management access, session. 
The NE is not directly part of topology but brings meaning to the FD context and the LTP context (and hence the links). 
lifecycle:LikelyToChange</text>
    </description>
    <config value="true"/>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <list name="_fdRefList">
      <description>
        <text>Represents the FD that is completely within the boundary of the NE.
At a low level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). 
Note that an NE can encompass multiple switch matrices (FDs) and the FD representing the switch matrix can be further partitioned.
Where an FD is referenced by the NeEncompassesFd association, any FDs that it encompasses (i.e., that are associated with it by HigherLevelFdEncompassesLowerLevelFds), must also be encompassed by the NE and hence must have the NeEncompassesFd association.
</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="ForwardingDomain"/>
    </list>
    <list name="_ltpRefList">
      <description>
        <text>An NE has associated LTPs that are at its boundary.
The NeEncompassesFd association occurs for FDs that are within the bounds of the NetworkElement definition such that the FD is bounded by LTPs, all of which are on the boundary of the NetworkElement or are within the NetworkElement. 
An LTP can be independent of an NE.</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="LogicalTerminationPoint"/>
    </list>
  </container>
  <grouping name="FcPort">
    <description>
      <text>The association of the FC to LTPs is made via FcPorts.
The FcPort object class models the access to the FC function. 
The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances.  
In cases where there is resilience the FcPort may convey the resilience role of the access to the FC. 
It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point.
The FcPort replaces the Protection Unit of a traditional protection model. 
The ForwadingConstruct can be considered as a component and the FcPort as a Port on that component</text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:LocalClass"/>
    <leaf-list name="_ltpRefList">
      <description>
        <text>The FcPort may be associated with more than one LTP when the FcPort is bidirectional and the LTPs are unidirectional.
Multiple Ltp
- Bidirectional FcPort to two Uni Ltps
Zero Ltp
- BreakBeforeMake transition
- Planned Ltp not yet in place
- Off-network LTP referenced through other mechanism</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <max-elements value="2"/>
    </leaf-list>
    <leaf name="role">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:PortRole"/>
      <description>
        <text>Each FcPort of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. </text>
      </description>
    </leaf>
    <leaf name="fcPortDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:PortDirection"/>
      <description>
        <text>The orientation of defined flow at the FcPort.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LayerProtocol">
    <description>
      <text>Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. It can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. Where the client - server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. </text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:LocalClass"/>
    <leaf name="layerProtocolName">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <description>
        <text>Indicate the specific layer-protocol described by the LayerProtocol entity.</text>
      </description>
    </leaf>
    <leaf name="configuredClientCapacity">
      <type name="string"/>
      <description>
        <text>Provides a summarized view of the client capacity that is configurable for use.
Note the cleint LTP association should provide all necessary detail hence this attribute is questionable.</text>
      </description>
    </leaf>
    <leaf name="lpDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection"/>
      <description>
        <text>The overall directionality of the LP. 
- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.
- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows
- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows</text>
      </description>
    </leaf>
    <leaf name="terminationState">
      <type name="boolean"/>
      <description>
        <text>Indicates whether the layer is terminated and if so how.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LogicalTerminationPoint">
    <description>
      <text>The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. 
The structure of LTP supports all transport protocols including circuit and packet forms.</text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="_serverLtpRefList">
      <description>
        <text>References contained LTPs representing servers of this LTP in an inverse multiplexing configuration (e.g. VCAT).</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="_clientLtpRefList">
      <description>
        <text>References contained LTPs representing client traffic of this LTP for normal cases of multiplexing.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <list name="_lpList">
      <description>
        <text>Ordered list of LayerProtocols that this LTP is comprised of where the first entry in the list is the lowest server layer (e.g. physical)</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="LayerProtocol"/>
      <min-elements value="1"/>
    </list>
    <leaf name="_connectedLtpRef">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>Applicable in a simple context where two LTPs are associated via a non-adjustable enabled forwarding.
Reduces clutter removing the need for two additional LTPs and an FC with a pair of FcPorts.</text>
      </description>
    </leaf>
    <leaf name="_peerLtpRef">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>References contained LTPs representing the reversal of orientation of flow where two LTPs are associated via a non-adjustable enabled forwarding and where the referenced LTP is fully dependent on the this LTP.</text>
      </description>
    </leaf>
    <leaf-list name="physicalPortReference">
      <description>
        <text>One or more text labels for the unmodelled physical port associated with the LTP.
In many cases there is no associated physical port</text>
      </description>
      <ordered-by value="system"/>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="_ltpRefList">
      <description>
        <text>References one or more LTPs in other views that represent this LTP. 
The referencing LTP is the rovider of capability.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <leaf name="ltpDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection"/>
      <description>
        <text>The overall directionality of the LTP. 
- A BIDIRECTIONAL LTP must have at least some LPs that are BIDIRECTIONAL but may also have some SINK and/or SOURCE LPs.
- A SINK LTP can only contain SINK LPs
- A SOURCE LTP can only contain SOURCE LPs</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="FcSwitch">
    <description>
      <text>The FcSwitch object class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. 
If an FC exposes protection (having two FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC.
The FC switch represents and defines a protection switch structure encapsulated in the FC. 
Essentially performs the functoion of the Protection Group in a traditional model. 
Associates to 2 or more FcPorts each playing the role of a Protection Unit. 
One or more protection FcPorts (standby/backup) provide protection for one or more working (i.e. regular/main/preferred) FcPorts where eith protection or working can feed one or more protected FcPort.
May be used in revertive or non-revertive (symmetric) mode. 
When in revertive mode may define waitToRestore time.
May be used in one of several modes including source switch, destination switched, source and destination switched etc (covering cases such as  1+1 ane 1:1).. 
May be lockout (prevented from switching), force switched or manual switched.
Will indicate switch state and change of state.</text>
    </description>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:LocalClass"/>
    <leaf name="holdOffTime">
      <type name="int32"/>
      <description>
        <text>This attribute indicates the time, in seconds, between declaration of unacceptable quality of signal on the currently selected FcPort, and the initialization of the protection switching algorithm. </text>
      </description>
    </leaf>
    <leaf name="waitToRestoreTime">
      <type name="int32"/>
      <description>
        <text>If the protection system is revertive, this attribute specifies the amount of time, in seconds, to wait after the preferred FcPort returns to an acceptable state of operaion (e.g a fault has cleared) before restoring traffic to that preferred FcPort. </text>
      </description>
    </leaf>
    <leaf name="protType">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:ProtectionType"/>
      <description>
        <text>Indicates the protection scheme that is used for the ProtectionGroup.</text>
      </description>
    </leaf>
    <leaf name="operType">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:OperType"/>
      <description>
        <text>This attribute whether or not the protection scheme is revertive or non-revertive. </text>
      </description>
    </leaf>
    <leaf-list name="_selectedFcPortRefList">
      <description>
        <text>Indicates which points are selected by the switch.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:ForwardingConstruct/CoreModel-CoreNetworkModule-ObjectClasses:_fcPortList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <min-elements value="1"/>
    </leaf-list>
  </grouping>
</module>


<module name="G_874_1_model-Imported_Information_Object_Classes-X_739"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-X_739="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_739"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-X_721="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_721"
        xmlns:G_874_1_model-Type_Definitions="uri:onf:G_874_1_model-Type_Definitions"
        xmlns:CoreModel-CoreFoundationModule-StateModel="uri:onf:CoreModel-CoreFoundationModule-StateModel">
  <namespace uri="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_739"/>
  <prefix value="G_874_1_model-Imported_Information_Object_Classes-X_739"/>
  <import module="G_874_1_model-Imported_Information_Object_Classes-X_721">
    <prefix value="G_874_1_model-Imported_Information_Object_Classes-X_721"/>
  </import>
  <import module="G_874_1_model-Type_Definitions">
    <prefix value="G_874_1_model-Type_Definitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-StateModel">
    <prefix value="CoreModel-CoreFoundationModule-StateModel"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="X_739_Scanner">
    <key value="scannerId"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="X_739_Scanner"/>
  </list>
  <grouping name="X_739_Scanner">
    <uses name="G_874_1_model-Imported_Information_Object_Classes-X_721:X_721_Top"/>
    <leaf name="scannerId">
      <type name="string"/>
    </leaf>
    <leaf name="granularityPeriod">
      <type name="G_874_1_model-Type_Definitions:GranularityPeriodType"/>
    </leaf>
    <leaf name="administrativeState">
      <type name="CoreModel-CoreFoundationModule-StateModel:AdministrativeState"/>
    </leaf>
  </grouping>
</module>


<module name="MicrowaveModel-ObjectClasses-SuperClasses"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-SuperClasses="uri:onf:MicrowaveModel-ObjectClasses-SuperClasses"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-SuperClasses"/>
  <prefix value="MicrowaveModel-ObjectClasses-SuperClasses"/>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-09">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="MwCurrentProblem">
    <description>
      <text>According to ITU-T G.874.1?</text>
    </description>
    <leaf name="sequenceNumber">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Unique sequence number of the current problem object.</text>
      </description>
    </leaf>
    <leaf name="timeStamp">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time and date of the problem.
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
    </leaf>
  </grouping>
</module>


<module name="CoreModel-CoreFoundationModule-StateModel"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreFoundationModule-StateModel="uri:onf:CoreModel-CoreFoundationModule-StateModel">
  <namespace uri="uri:onf:CoreModel-CoreFoundationModule-StateModel"/>
  <prefix value="CoreModel-CoreFoundationModule-StateModel"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-09">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="State_Pac">
    <description>
      <text>Provides general state attributes.
lifecycle:Preliminary</text>
    </description>
    <leaf name="operationalState">
      <type name="OperationalState"/>
      <config value="false"/>
      <description>
        <text>The operational state is used to indicate whether or not the resource is installed and working</text>
      </description>
    </leaf>
    <leaf name="administrativeControl">
      <type name="AdministrativeControl"/>
      <description>
        <text>The administrativeControl state provides control of the availability of specific resources without modification to the provisioning of those resources.
The value is the current control target. The actual administrativeState may or may not be at target.</text>
      </description>
    </leaf>
    <leaf name="administrativeState">
      <type name="AdministrativeState"/>
      <config value="false"/>
      <description>
        <text>Shows whether or not the client has permission to use or has a prohibition against using the resource.
The administrative state expresses usage permissions for specific resources without modification to the provisioning of those resources.</text>
      </description>
    </leaf>
    <leaf name="lifecycleState">
      <type name="LifecycleState"/>
      <description>
        <text>Used to track the planned deployment, allocation to clients and withdrawal of resources. </text>
      </description>
    </leaf>
  </grouping>
  <typedef name="OperationalState">
    <description>
      <text>The possible values of the operationalState.
lifecycle:Preliminary</text>
    </description>
    <type name="enumeration">
      <enum name="DISABLED"/>
      <enum name="ENABLED"/>
    </type>
  </typedef>
  <typedef name="AdministrativeState">
    <description>
      <text>The possible values of the administrativeState.
lifecycle:Preliminary</text>
    </description>
    <type name="enumeration">
      <enum name="LOCKED"/>
      <enum name="UNLOCKED"/>
    </type>
  </typedef>
  <typedef name="AdministrativeControl">
    <description>
      <text>Reflects the current control action when the entity is not in the desired state.
The possible values of the current target administrative state.
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="UNLOCK"/>
      <enum name="LOCK_PASSIVE"/>
      <enum name="LOCK_ACTIVE"/>
      <enum name="LOCK_IMMEDIATE"/>
    </type>
  </typedef>
  <typedef name="ExtendedAdminState">
    <description>
      <text>Possible extentions to AdministrativeState
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="LOCKED"/>
      <enum name="UNLOCKED"/>
      <enum name="SHUTTING_DOWN_ACTIVE"/>
      <enum name="SHUTTING_DOWN_PASSIVE"/>
    </type>
  </typedef>
  <typedef name="LifecycleState">
    <description>
      <text>The possible values of the lifecycleState.
lifecycle:Experimental</text>
    </description>
    <type name="enumeration">
      <enum name="PLANNED"/>
      <enum name="POTENTIAL"/>
      <enum name="INSTALLED"/>
      <enum name="PENDING_REMOVAL"/>
    </type>
  </typedef>
</module>


<module name="MicrowaveModel-ObjectClasses-HybridMwStructure"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-HybridMwStructure="uri:onf:MicrowaveModel-ObjectClasses-HybridMwStructure"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-HybridMwStructure"/>
  <prefix value="MicrowaveModel-ObjectClasses-HybridMwStructure"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <feature name="hybrid-microwave">
    <description>
      <text>Feature 'hybrid-microwave' is mandatory for device types transporting Ethernet + TDM.</text>
    </description>
  </feature>
  <list name="MW_HybridMwStructure_Pac">
    <description>
      <text>LTP(MWS-TTP)
The HybridMwStructure_Pac and its attached classes MUST be provided on management interfaces of microwave devices, which are transporting TDM and Ethernet traffic.</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="hybridMwStructureCapability">
      <config value="false"/>
      <uses name="HybridMwStructureCapability"/>
    </container>
    <container name="hybridMwStructureConfiguration">
      <config value="true"/>
      <uses name="HybridMwStructureConfiguration"/>
    </container>
    <container name="hybridMwStructureStatus">
      <config value="false"/>
      <uses name="HybridMwStructureStatus"/>
    </container>
    <container name="hybridMwStructureCurrentProblems">
      <config value="false"/>
      <uses name="HybridMwStructureCurrentProblems"/>
    </container>
    <container name="hybridMwStructureCurrentPerformance">
      <config value="false"/>
      <uses name="HybridMwStructureCurrentPerformance"/>
    </container>
    <container name="hybridMwStructureHistoricalPerformances">
      <config value="false"/>
      <uses name="HybridMwStructureHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="HybridMwStructureCapability">
    <description>
      <text>Describes the logical structuring of the physical capacity provided by a hybrid microwave device (TDM + Ethernet).
Segmentation is available.
TDM transport is available.</text>
    </description>
    <leaf name="structureId">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <config value="false"/>
      <description>
        <text>Identifies the Structure for bundling and container.</text>
      </description>
    </leaf>
    <list name="supportedTdmStructureTypesList">
      <description>
        <text>Lists the TDM frame types that are supported.</text>
      </description>
      <key value="tdmStructureName"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmStructureType"/>
      <min-elements value="1"/>
    </list>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:non. Names are to be separated by commas. Further alarms might be added by the device.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="HybridMwStructureConfiguration">
    <container name="structureType">
      <description>
        <text>TDM frame to be applied.</text>
      </description>
      <config value="true"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmStructureType"/>
    </container>
    <leaf name="numberOfTdmSegmentsToBeReserved">
      <type name="int16"/>
      <description>
        <text>Allows to configure the number of segments reserved for TDM frames of the type specified in HybridMwStructure::HybridMwStructureConfiguration::structureType</text>
      </description>
      <default value="-1"/>
    </leaf>
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the type of problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureProblemSeverityType"/>
    </list>
  </grouping>
  <grouping name="HybridMwStructureStatus">
    <list name="segmentStatusList">
      <description>
        <text>Status of each segment (all TDM and one Ethernet).
Multiplicity = HybridMwStructure::StructureConfiguration::tdmReservedNumberOfSegments + 1</text>
      </description>
      <key value="segmentStatusTypeId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:segmentStatusType"/>
    </list>
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time and date of the last update of the status information.
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="HybridMwStructureCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="HybridMwStructureCurrentPerformance">
    <description>
      <text>Aggregated performance information of the structure of a hybrid microwave at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <description>
        <text>At least values of the counters, which are reset every 15 minutes, are to be provided. If available, the current values of the counters, which are reset every 24 hour, can be provided, too.</text>
      </description>
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="HybridMwStructureHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the structure of a hybrid microwave for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureHistoricalPerformanceType"/>
    </list>
  </grouping>
</module>


<module name="G_874_1_model-Object_Classes"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Object_Classes="uri:onf:G_874_1_model-Object_Classes"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-Q_822="uri:onf:G_874_1_model-Imported_Information_Object_Classes-Q_822"
        xmlns:G_874_1_model-Type_Definitions="uri:onf:G_874_1_model-Type_Definitions">
  <namespace uri="uri:onf:G_874_1_model-Object_Classes"/>
  <prefix value="G_874_1_model-Object_Classes"/>
  <import module="G_874_1_model-Imported_Information_Object_Classes-Q_822">
    <prefix value="G_874_1_model-Imported_Information_Object_Classes-Q_822"/>
  </import>
  <import module="G_874_1_model-Type_Definitions">
    <prefix value="G_874_1_model-Type_Definitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>&lt;p&gt;Version 2.02; outcome of the 10/2013 Nuremberg meeting.&lt;br&gt;Version 2.03; updates for Geneva 03-2014&lt;br&gt;Version 2.04; updates for Shanghai 09-2014&lt;br&gt;Version 2.05; input to Geneva 11-2014&lt;br&gt;Version 2.06; output from Geneva 11-2014&lt;br&gt;Version 2.07; using OpenProfile 3-2015&lt;br&gt;Version 2.08; output from Geneva 06-2015&lt;/p&gt;</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <grouping name="OTN_CurrentData">
    <description>
      <text>This object class is an abstract class from which the OTN layer-specific CurrentData object classes are inherited. This object class is a subclass of the Q.822 CurrentData object class, which in turn is a subclass of X.739 Scanner object class. It inherits the following attributes: scannerId, operationalState, granularityPeriod, administrativeState, suspectIntervalFlag, elapsedTime, observedObjectClass, and observedObjectInstance.</text>
    </description>
    <uses name="G_874_1_model-Imported_Information_Object_Classes-Q_822:Q_822_CurrentData"/>
    <leaf name="timestamp">
      <type name="G_874_1_model-Type_Definitions:DateAndTime"/>
      <description>
        <text>The timestamp associated with when the current data was collected.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="OTN_HistoryData">
    <description>
      <text>This object class is an abstract class from which the OTN layer-specific HistoryData object classes are inherited. </text>
    </description>
    <uses name="G_874_1_model-Imported_Information_Object_Classes-Q_822:Q_822_HistoryData"/>
    <leaf name="suspectIntervalFlag">
      <type name="boolean"/>
      <description>
        <text>This attribute indicates that the data collected during the interval is suspect.</text>
      </description>
      <default value="false"/>
    </leaf>
  </grouping>
</module>


<module name="G_874_1_model-Imported_Data_Types"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Imported_Data_Types="uri:onf:G_874_1_model-Imported_Data_Types">
  <namespace uri="uri:onf:G_874_1_model-Imported_Data_Types"/>
  <prefix value="G_874_1_model-Imported_Data_Types"/>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>&lt;p&gt;Version 2.02; outcome of the 10/2013 Nuremberg meeting.&lt;br&gt;Version 2.03; updates for Geneva 03-2014&lt;br&gt;Version 2.04; updates for Shanghai 09-2014&lt;br&gt;Version 2.05; input to Geneva 11-2014&lt;br&gt;Version 2.06; output from Geneva 11-2014&lt;br&gt;Version 2.07; using OpenProfile 3-2015&lt;br&gt;Version 2.08; output from Geneva 06-2015&lt;/p&gt;</text>
  </description>
  <revision date="2016-07-10">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <typedef name="ObjectInstance">
    <type name="string"/>
  </typedef>
  <typedef name="Name">
    <type name="string"/>
  </typedef>
  <typedef name="ObjectIdentifier">
    <type name="string"/>
  </typedef>
  <typedef name="GeneralizedTime">
    <type name="string"/>
  </typedef>
  <typedef name="TimePeriod">
    <description>
      <text>This primitive Type is imported from X.739.</text>
    </description>
    <type name="string"/>
  </typedef>
</module>


<module name="MicrowaveModel-ObjectClasses-EthernetContainer"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-EthernetContainer="uri:onf:MicrowaveModel-ObjectClasses-EthernetContainer"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-EthernetContainer"/>
  <prefix value="MicrowaveModel-ObjectClasses-EthernetContainer"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="MW_EthernetContainer_Pac">
    <description>
      <text>LTP(Client)</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="ethernetContainerCapability">
      <config value="false"/>
      <uses name="EthernetContainerCapability"/>
    </container>
    <container name="ethernetContainerConfiguration">
      <config value="true"/>
      <uses name="EthernetContainerConfiguration"/>
    </container>
    <container name="ethernetContainerStatus">
      <config value="false"/>
      <uses name="EthernetContainerStatus"/>
    </container>
    <container name="ethernetContainerCurrentProblems">
      <config value="false"/>
      <uses name="EthernetContainerCurrentProblems"/>
    </container>
    <container name="ethernetContainerCurrentPerformance">
      <config value="false"/>
      <uses name="EthernetContainerCurrentPerformance"/>
    </container>
    <container name="ethernetContainerHistoricalPerformances">
      <config value="false"/>
      <uses name="EthernetContainerHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="EthernetContainerCapability">
    <leaf name="bundlingIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>This attribute has to be set on 'true', if the device allows combining resources from several air interfaces for transporting this Ethernet container.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="packetCompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case packet compression can be activated, but not configured to a certain type, packetCompressionAvail shall be set on 'true', but none of the compression level specific booleans.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="layer2CompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on layer 2 available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="vlanCompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on VLAN layer available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="qInQCompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on layer of a second VLAN available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mplsCompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on mpls layer available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="ipv4CompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on layer 3 for IPv4 available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="ipv6CompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on layer 3 for IPv6 available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="layer4CompressionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Packet compression on layer 4 (TCP and UDP header) available at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="encryptionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Shall be marked 'true', if Ethernet payload encryption is available.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:'framingIsFaulty' and 'containerIsDown'. Further alarms might be added by the device.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="EthernetContainerConfiguration">
    <leaf name="containerID">
      <type name="string"/>
      <description>
        <text>ContainterID in Netconf must be the same as EthernetPortID in OpenFlow so a connection can be made between the two items, which separately exist in the controller.</text>
      </description>
    </leaf>
    <list name="segmentsIDList">
      <description>
        <text>Lists the segments used for transporting this Ethernet container. In case EthernetContainer::ContainerCapability::bundlingIsAvail==0, all TypeDefinitions::segmentIdType::structureId must be identical in the list.</text>
      </description>
      <key value="structureIdRef segmentIdRef"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:segmentIDType"/>
      <min-elements value="1"/>
    </list>
    <leaf name="packetCompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>In case packet compression is activated, but no type is activated, it is assumed that the device chooses the optimum.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="layer2CompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on layer 2 configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="vlanCompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on VLAN layer configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="qInQCompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on layer of a second VLAN configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mplsCompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on MPLS layer configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="ipv4CompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on layer 3 for IPv4 configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="ipv6CompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on layer 3 for IPv6 configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="layer4CompressionIsOn">
      <type name="boolean"/>
      <description>
        <text>Packet compression on layer 4 (TCP and UDP header) configured at the device.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="encryptionIsOn">
      <type name="boolean"/>
      <description>
        <text>Activates encryption of the Ethernet payload.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="cryptographicKey">
      <type name="string"/>
      <description>
        <text>Key for transforming plaintext into cipher text data.</text>
      </description>
      <default value="Cryptographic key not yet defined."/>
    </leaf>
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerProblemSeverityType"/>
      <min-elements value="2"/>
    </list>
  </grouping>
  <grouping name="EthernetContainerStatus">
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time the Container entered its current operational status. 
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
      <default value="20101120140000.0Z+1"/>
    </leaf>
  </grouping>
  <grouping name="EthernetContainerCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="EthernetContainerCurrentPerformance">
    <description>
      <text>Aggregated performance information of the Ethernet container at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="EthernetContainerHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the Ethernet container for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerHistoricalPerformanceType"/>
    </list>
  </grouping>
</module>


<module name="MicrowaveModel-TypeDefinitions"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:MicrowaveModel-ObjectClasses-SuperClasses="uri:onf:MicrowaveModel-ObjectClasses-SuperClasses"
        xmlns:G_874_1_model-Object_Classes="uri:onf:G_874_1_model-Object_Classes"
        xmlns:CoreModel-CoreFoundationModule-StateModel="uri:onf:CoreModel-CoreFoundationModule-StateModel">
  <namespace uri="uri:onf:MicrowaveModel-TypeDefinitions"/>
  <prefix value="MicrowaveModel-TypeDefinitions"/>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="MicrowaveModel-ObjectClasses-SuperClasses">
    <prefix value="MicrowaveModel-ObjectClasses-SuperClasses"/>
  </import>
  <import module="G_874_1_model-Object_Classes">
    <prefix value="G_874_1_model-Object_Classes"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-StateModel">
    <prefix value="CoreModel-CoreFoundationModule-StateModel"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <typedef name="severityType">
    <description>
      <text>According to ITU-T M.3160</text>
    </description>
    <type name="enumeration">
      <enum name="non-alarmed"/>
      <enum name="warning"/>
      <enum name="minor"/>
      <enum name="major"/>
      <enum name="critical"/>
    </type>
  </typedef>
  <grouping name="channelPlanType">
    <leaf name="supportedChannelPlan">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Unique name (e.g. CEPT/ERC/REC (01) 04 Annex 5) of an international agreement that describe allocations of frequency channels, to which this air interface complies. Corresponding channel plans to be delivered by the hardware vendor and to be stored by the operator in the controller/application attached database.</text>
      </description>
    </leaf>
    <leaf name="duplexDistanceIsVariable">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>To be set on  'true', if the distance between transmitted and received frequency is variable.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="duplexDistance">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Distance between transmitted and received frequency.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="autoFreqSelectIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the microwave radio is capable of automatically selecting the transmit frequency in unlicensed bands, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <list name="transmissionModeList">
      <key value="transmissionModeId"/>
      <ordered-by value="system"/>
      <uses name="transmissionModeType"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="transmissionModeType">
    <leaf name="transmissionModeId">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <config value="false"/>
      <description>
        <text>Indentifies the transmissionMode for internal reference.</text>
      </description>
    </leaf>
    <leaf name="channelBandwidth">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Bandwidth of the transmit channel. The value shall be expressed explicitly (means in kHz) not as a reference to an international agreement. The values shall be chosen from the following _list: 3.500, 7.000, 14.000, 27.500, 28.000, 29.000, 29.650, 30.000, 40.000, 50.000, 55.000, 56.000, 59.300, 60.000, 80.000, 100.000, 112.000, 120.000, 150.000, 200.000, 250.000, 500.000, 750.000, 1.000.000, 1.250.000, 1.500.000, 1.750.000, 2.000.000;</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="modulationScheme">
      <type name="int16"/>
      <config value="false"/>
      <description>
        <text>Modulation scheme, which is base to the other characteristics described in the same transmissionModeType data type. The modulation scheme shall be described by the number of symbols (e.g. BPSK-&gt;'2' or 256QAM-&gt;'256').</text>
      </description>
      <units name="symbols"/>
      <default value="-1"/>
    </leaf>
    <leaf name="informationRate">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Information rate of the coding scheme in %.</text>
      </description>
      <units name="%"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txPowerMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Value of the minimum transmit power the modem can operate in dBm.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="txPowerMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Value of the maximum transmit power the modem can operate in dBm.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="rxThreshold">
      <type name="int16"/>
      <config value="false"/>
      <description>
        <text>Value of the receive level required to decode the received signal with a Bit Error Rate of 1e-6 or less.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="amUpshiftLevel">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Value of the receive level that has to be exceeded to shift into a higher modulation scheme.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="amDownshiftLevel">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Value of the receive level that has to be exceeded for not shifting into a lower modulation scheme.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="xpicIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the Air Interface Port is capable of XPIC, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
  </grouping>
  <typedef name="polarizationType">
    <type name="enumeration">
      <enum name="not-specified"/>
      <enum name="horizontal"/>
      <enum name="vertical"/>
    </type>
  </typedef>
  <grouping name="airInterfaceProblemSeverityType">
    <leaf name="problemKindName">
      <type name="string"/>
      <description>
        <text>Name of the alarm according to AirInterface::AirInterfaceCapability::supportedAlarms</text>
      </description>
    </leaf>
    <leaf name="problemKindSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of this type of alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="airInterfaceCurrentProblemType">
    <uses name="MicrowaveModel-ObjectClasses-SuperClasses:MwCurrentProblem"/>
    <leaf name="problemName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Name of the alarm according to AirInterface::AirInterfaceCapability::supportedAlarms</text>
      </description>
      <default value="Air interface problems not yet defined."/>
    </leaf>
    <leaf name="problemSeverity">
      <type name="severityType"/>
      <config value="false"/>
      <description>
        <text>Severity of the alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="airInterfacePerformanceType">
    <description>
      <text>Consolidated performance information of the air interface.</text>
    </description>
    <leaf name="es">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Number of errored seconds.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="ses">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Number of severely errored seconds.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="cses">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Number of consecutive severely errored seconds.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="unavailability">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Total time of unavailability in seconds.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txLevelMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Minimum transmit power. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="txLevelMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum transmit power. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="txLevelAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Averaged transmit power. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="rxLevelMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Minimum receive level. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="rxLevelMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum receive level. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="rxLevelAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Averaged receive level. Signed integers are required.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="time2Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time4SymbolsS">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Sum of all seconds the transmitter operated in e.g. 4QAM strong.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time4Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time8Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time16SymbolsS">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time16Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time32Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time64Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time128Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time256Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time512Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time512SymbolsL">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time1024Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time1024SymbolsL">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time2048Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time2048SymbolsL">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time4096Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time4096SymbolsL">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time8192Symbols">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="time8192SymbolsL">
      <type name="int32"/>
      <config value="false"/>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="snirMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Minimum signal to (noise+interference) ratio.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="snirMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum signal to (noise+interference) ratio.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="snirAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Averaged signal to (noise+interference) ratio.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="xpdMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Minimum cross polarization discrimination.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="xpdMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum cross polarization discrimination.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="xpdAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Averaged cross polarization discrimination.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="rfTempMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Lowest temperature (in degree Celsius) of the radio module inside the outdoor unit.</text>
      </description>
      <units name="C"/>
      <default value="-99"/>
    </leaf>
    <leaf name="rfTempMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Highest temperature (in degree Celsius) of the radio module inside the outdoor unit.</text>
      </description>
      <units name="C"/>
      <default value="-99"/>
    </leaf>
    <leaf name="rfTempAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Averaged temperature (in degree Celsius) of the radio module inside the outdoor unit.</text>
      </description>
      <units name="C"/>
      <default value="-99"/>
    </leaf>
    <leaf name="defectBlocksSum">
      <type name="int16"/>
      <config value="false"/>
      <description>
        <text>Total number of blocks that were defect after receiving and could not be corrected by the FEC.</text>
      </description>
      <units name="blocks"/>
      <default value="-1"/>
    </leaf>
    <leaf name="timePeriod">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Total length of the measurement period.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
  </grouping>
  <grouping name="airInterfaceCurrentPerformanceType">
    <description>
      <text>Turns performance information into current performance information by inheriting from OTN_CurrentData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_CurrentData"/>
    <container name="performanceData">
      <uses name="airInterfacePerformanceType"/>
    </container>
  </grouping>
  <grouping name="airInterfaceHistoricalPerformanceType">
    <description>
      <text>Turns performance information into historical performance information by inheriting from OTN_HistoryData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_HistoryData"/>
    <container name="performanceData">
      <uses name="airInterfacePerformanceType"/>
    </container>
  </grouping>
  <typedef name="protectionType">
    <type name="enumeration">
      <enum name="hsb"/>
    </type>
  </typedef>
  <typedef name="roleType">
    <type name="enumeration">
      <enum name="working"/>
      <enum name="protection"/>
      <enum name="protected"/>
    </type>
  </typedef>
  <grouping name="diversityType">
    <leaf name="diversityName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Names to be chosen from the following list: 'spaceDiversity', 'frequencyDiversity'</text>
      </description>
    </leaf>
    <leaf name="numberOfAirInterfacesMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum number of air interfaces that could be part of this kind of diversity.</text>
      </description>
      <units name="air interfaces"/>
      <default value="1"/>
    </leaf>
  </grouping>
  <typedef name="airInterfaceDiversityStatusType">
    <type name="enumeration">
      <enum name="groupDown"/>
      <enum name="notAllAiActive"/>
      <enum name="allAiActive"/>
    </type>
  </typedef>
  <grouping name="airInterfaceDiversityProblemSeverityType">
    <leaf name="problemKindName">
      <type name="string"/>
      <description>
        <text>Name of the alarm according to AirInterfaceDiversity::AirInterfaceDiversityCapability::supportedAlarms</text>
      </description>
    </leaf>
    <leaf name="problemKindSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of this type of alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="airInterfaceDiversityCurrentProblemType">
    <uses name="MicrowaveModel-ObjectClasses-SuperClasses:MwCurrentProblem"/>
    <leaf name="problemName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Name of the alarm according to AirInterfaceDiversity::AirInterfaceDiversityCapability::supportedAlarms</text>
      </description>
      <default value="Air interface diversity problems not yet defined."/>
    </leaf>
    <leaf name="problemSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of the alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="airInterfaceDiversityPerformanceType">
    <description>
      <text>Consolidated performance information of the air interface diversity group.</text>
    </description>
    <leaf name="snirMin">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Minimum signal to (noise+interference) ratio of the combined signals.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="snirMax">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum signal to (noise+interference) ratio of the combined signals.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="snirAvg">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Average signal to (noise+interference) ratio of the combined signals.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
  </grouping>
  <grouping name="airInterfaceDiversityCurrentPerformanceType">
    <description>
      <text>Turns performance information into current performance information by inheriting from OTN_CurrentData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_CurrentData"/>
    <container name="performanceData">
      <uses name="airInterfaceDiversityPerformanceType"/>
    </container>
  </grouping>
  <grouping name="airInterfaceDiversityHistoricalPerformanceType">
    <description>
      <text>Turns performance information into historical performance information by inheriting from OTN_HistoryData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_HistoryData"/>
    <container name="performanceData">
      <uses name="airInterfaceDiversityPerformanceType"/>
    </container>
  </grouping>
  <grouping name="tdmStructureType">
    <leaf name="tdmStructureName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Names to be chosen from the following list: 'e1','t1','j1','e3','ds3','stm1','cpri1','cpri2','cpri3','cpri4','cpri5','cpri6' or 'cpri7'</text>
      </description>
    </leaf>
    <leaf name="tdmSegmentSize">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Size of the TDM segment in kbit/s. Values to be chosen from the following list: '2048','1544','34000','44736 ','155520','614400','1228800','2457600','3072000','4915200','6144000' or '9830400;</text>
      </description>
      <units name="kbit/s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="maxNumberOfSegmentsReservable">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Device specific maximum number of segments (not depending on current air interface configuration) that can be reserved for this type of segment on a single air interface.</text>
      </description>
      <units name="segments"/>
      <default value="-1"/>
    </leaf>
  </grouping>
  <grouping name="structureProblemSeverityType">
    <leaf name="problemKindName">
      <type name="string"/>
      <description>
        <text>Name of the alarm according to Structure::StructureCapability::supportedAlarms</text>
      </description>
    </leaf>
    <leaf name="problemKindSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of this type of alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="structureCurrentProblemType">
    <uses name="MicrowaveModel-ObjectClasses-SuperClasses:MwCurrentProblem"/>
    <leaf name="problemName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Name of the alarm according to Structure::StructureCapability::supportedAlarms</text>
      </description>
      <default value="Structure problems not yet defined."/>
    </leaf>
    <leaf name="problemSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of the alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <typedef name="structurePerformanceType">
    <description>
      <text>Consolidated performance information of the Structure.</text>
    </description>
    <type name="int32"/>
  </typedef>
  <grouping name="structureCurrentPerformanceType">
    <description>
      <text>Turns performance information into current performance information by inheriting from OTN_CurrentData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_CurrentData"/>
    <leaf name="performanceData">
      <type name="structurePerformanceType"/>
      <config value="false"/>
    </leaf>
  </grouping>
  <grouping name="structureHistoricalPerformanceType">
    <description>
      <text>Turns performance information into historical performance information by inheriting from OTN_HistoryData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_HistoryData"/>
    <leaf name="performanceData">
      <type name="structurePerformanceType"/>
      <config value="false"/>
    </leaf>
  </grouping>
  <grouping name="tdmContainerType">
    <leaf name="tdmContainerName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Names to be chosen from the following list: 'e1','t1','j1','e3','t3','stm1','cpri1','cpri2','cpri3','cpri4','cpri5','cpri6' or 'cpri7'</text>
      </description>
    </leaf>
    <leaf name="tdmContainerSize">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Capacity required for transporting this type of container (in kbit/s). Values to be chosen from the following list: '2048','1544','34000','44736 ','155520','614400','1228800','2457600','3072000','4915200','6144000' or '9830400;</text>
      </description>
      <units name="kbit/s"/>
      <default value="-1"/>
    </leaf>
  </grouping>
  <grouping name="segmentIDType">
    <description>
      <text>Identifies the segments, which are used to transport the container.
Combinations of structureId and segmentId must be unique inside the device to assure that every resource is used just once.</text>
    </description>
    <leaf name="structureIdRef">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
    </leaf>
    <leaf name="segmentIdRef">
      <type name="int16"/>
    </leaf>
  </grouping>
  <grouping name="segmentStatusType">
    <leaf name="segmentStatusTypeId">
      <type name="int16"/>
      <config value="false"/>
    </leaf>
    <leaf name="segmentIsReservedForTdm">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>The number of segments, which is configured by Structure::StructureConfiguration::tdmReservedNumberOfSegements, has to be reserved for TDM. Starting from the lowest index value, these segments have to be marked with a 'true' in segmentIsReservedForTdm.
</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="operationalStatus">
      <type name="CoreModel-CoreFoundationModule-StateModel:OperationalState"/>
      <config value="false"/>
      <description>
        <text>Current operational status of each segment.</text>
      </description>
      <default value="DISABLED"/>
    </leaf>
  </grouping>
  <grouping name="containerProblemSeverityType">
    <leaf name="problemKindName">
      <type name="string"/>
      <description>
        <text>Name of the alarm according to Container::ContainerCapability::supportedAlarms</text>
      </description>
    </leaf>
    <leaf name="problemKindSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of this type of alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="containerCurrentProblemType">
    <uses name="MicrowaveModel-ObjectClasses-SuperClasses:MwCurrentProblem"/>
    <leaf name="problemName">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Name of the alarm according to Container::ContainerCapability::supportedAlarms</text>
      </description>
      <default value="Container problems not yet defined."/>
    </leaf>
    <leaf name="problemSeverity">
      <type name="severityType"/>
      <description>
        <text>Severity of the alarm.</text>
      </description>
      <default value="warning"/>
    </leaf>
  </grouping>
  <grouping name="containerPerformanceType">
    <description>
      <text>Consolidated performance information of the Container.</text>
    </description>
    <leaf name="txEthernetBytesMaxS">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Counts the number of Bytes of Ethernet traffic (before header compression) transmitted within a second and keeps the highest value within the measurement period. Field to be left blank for all types of TDM containers.
Required data volume = 31bit</text>
      </description>
      <units name="Bytes/s"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txEthernetBytesMaxM">
      <type name="int64"/>
      <config value="false"/>
      <description>
        <text>Counts the number of Bytes of Ethernet traffic (before header compression) transmitted within a minute and keeps the highest value with in the measurement period. Field to be left blank for all types of TDM containers.
Required data volume = 37bit</text>
      </description>
      <units name="Bytes/min"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txEthernetBytesSum">
      <type name="int64"/>
      <config value="false"/>
      <description>
        <text>Total number of Bytes of Ethernet traffic (before header compression) transmitted (in direction out of the device) during the measurement period. Field to be left blank for all types of TDM containers.
Required data volume = 47bit</text>
      </description>
      <units name="Bytes"/>
      <default value="-1"/>
    </leaf>
    <leaf name="timePeriod">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Total length of the measurement period in seconds.
Required data volume = 17bit</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
  </grouping>
  <grouping name="containerCurrentPerformanceType">
    <description>
      <text>Turns performance information into current performance information by inheriting from OTN_CurrentData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_CurrentData"/>
    <container name="performanceData">
      <uses name="containerPerformanceType"/>
    </container>
  </grouping>
  <grouping name="containerHistoricalPerformanceType">
    <description>
      <text>Turns performance information into historical performance information by inheriting from OTN_HistoryData.</text>
    </description>
    <uses name="G_874_1_model-Object_Classes:OTN_HistoryData"/>
    <container name="performanceData">
      <uses name="containerPerformanceType"/>
    </container>
  </grouping>
</module>


<module name="MicrowaveModel-ObjectClasses-AirInterface"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-AirInterface="uri:onf:MicrowaveModel-ObjectClasses-AirInterface"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-AirInterface"/>
  <prefix value="MicrowaveModel-ObjectClasses-AirInterface"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-01">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="MW_AirInterface_Pac">
    <description>
      <text>LTP(MWPS-TTP)</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="airInterfaceCapability">
      <config value="false"/>
      <uses name="AirInterfaceCapability"/>
    </container>
    <container name="airInterfaceConfiguration">
      <config value="true"/>
      <uses name="AirInterfaceConfiguration"/>
    </container>
    <container name="airInterfaceStatus">
      <config value="false"/>
      <uses name="AirInterfaceStatus"/>
    </container>
    <container name="airInterfaceCurrentProblems">
      <config value="false"/>
      <uses name="AirInterfaceCurrentProblems"/>
    </container>
    <container name="airInterfaceCurrentPerformance">
      <config value="false"/>
      <uses name="AirInterfaceCurrentPerformance"/>
    </container>
    <container name="airInterfaceHistoricalPerformances">
      <config value="false"/>
      <uses name="AirInterfaceHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="AirInterfaceCapability">
    <description>
      <text>Describes the 'analog' capabilities of modem and transmitter of the microwave device. Value ranges of attributes are not independently (e.g. min. and max. transmit power depends on modulation). Legal combinations of values are expressed in transmissionModeTypes.</text>
    </description>
    <leaf name="typeOfEquipment">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>This parameter indicates the equipment type. Instead of uploading the complete set of capabilities, capabilities of the same equipment type could be reused. Should be unique for a combination of modem, radio and their respective firmware.</text>
      </description>
      <default value="Type of equipment not yet defined."/>
    </leaf>
    <leaf name="txFrequencyMin">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Value of the minimum transmit frequency tunable at the air interface.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txFrequencyMax">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Value of the maximum transmit frequency tunable at the air interface.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="rxFrequencyMin">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Value of the minimum receive frequency tunable at the air interface.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="rxFrequencyMax">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Value of the maximum receive frequency tunable at the air interface.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="adaptiveModulationIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the device is capable of adaptive modulation, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mimoIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the device is capable of MIMO, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mimoChannels">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Maximum number (n) of spatial multiplexing streams that can be conveyed by an n x n MIMO configuration.</text>
      </description>
      <units name="channels"/>
      <default value="1"/>
    </leaf>
    <leaf name="alicIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the microwave radio is capable of Adjacent Link Interference Cancelation (canceling of interference cause by transmitters located at the same site), this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="atpcIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the microwave radio is capable of ATPC, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="atpcRange">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Extent of the ATPC range.</text>
      </description>
      <units name="dB"/>
      <default value="0"/>
    </leaf>
    <leaf name="encryptionIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>Shall be marked 'true', if payload encryption is available.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="loopBackIsAvail">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>In case the radio is capable of looping back header information of the air interface, this field shall contain a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="maintenanceTimerRange">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available time periods for maintenance configurations (e.g. the loop back of microwave header information) to be described. Concrete values shall be separated by commas (e.g. '10, 60, 360'). Ranges shall be expressed as two values separated by a minus (e.g. '10-360').</text>
      </description>
      <units name="s"/>
      <default value="Range of the maintenance timer not yet defined."/>
    </leaf>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:'signalIsLost','rslIsExceeded','temperatureIsExceeded','modemIsFaulty','radioIsFaulty' and 'modulationIsDownShifted'. Further alarms might be added by the device. Names are to be separated by commas.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
    <list name="supportedChannelPlanList">
      <description>
        <text>List of channel spacing that are supported by the device.</text>
      </description>
      <key value="supportedChannelPlan"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:channelPlanType"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceConfiguration">
    <description>
      <text>Configuration of the radio link.</text>
    </description>
    <leaf name="airInterfaceName">
      <type name="string"/>
      <description>
        <text>Operator specific microwave link ID (often used for coding area, type of element and sequential number).</text>
      </description>
      <default value="Air interface ID not yet defined."/>
    </leaf>
    <leaf name="radioSignalID">
      <type name="string"/>
      <description>
        <text>The radioSignalId is transmitted on the air interface so the remote site of the link synchronizes on the correct transmitter. The local radio MUST NOT synchronize on a radio signal with a different radioSignalId. The link ID is neither an ID necessary to span the model nor an ID referencing external data. It is just some sort of name of the link transmitted so the correct remote site can be identified in an interference situation.
The value zero might be used to make the microwave to disable the link ID check.</text>
      </description>
      <default value="Radio signal ID not yet defined."/>
    </leaf>
    <leaf name="txFrequency">
      <type name="int32"/>
      <description>
        <text>Center frequency of the transmit channel. The values to be configured have to exactly match the values listed in the international agreement referenced in channelPlanID. In case of automated selection of the transmit frequency this field shall describe the lowest center frequency selectable.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="rxFrequency">
      <type name="int32"/>
      <description>
        <text>Center frequency of the receive channel.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txChannelBandwidth">
      <type name="int32"/>
      <description>
        <text>Bandwidth of the transmit channel. The value shall be expressed explicitly (means in kHz) not as a reference to an international agreement. The values shall be chosen from the following _list: 3.500, 7.000, 14.000, 27.500, 28.000, 29.000, 29.650, 30.000, 40.000, 50.000, 55.000, 56.000, 59.300, 60.000, 80.000, 100.000, 112.000, 120.000, 150.000, 200.000, 250.000, 500.000, 750.000, 1.000.000, 1.250.000, 1.500.000, 1.750.000, 2.000.000;</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="rxChannelBandwidth">
      <type name="int32"/>
      <description>
        <text>Bandwidth of the receive channel. The value shall be expressed explicitly (means in kHz) not as a reference to an international agreement. The values shall be chosen from the following _list: 3.500, 7.000, 14.000, 27.500, 28.000, 29.000, 29.650, 30.000, 40.000, 50.000, 55.000, 56.000, 59.300, 60.000, 80.000, 100.000, 112.000, 120.000, 150.000, 200.000, 250.000, 500.000, 750.000, 1.000.000, 1.250.000, 1.500.000, 1.750.000, 2.000.000;</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="polarization">
      <type name="MicrowaveModel-TypeDefinitions:polarizationType"/>
      <description>
        <text>Allows documenting the polarization of the air interface.</text>
      </description>
      <default value="not-specified"/>
    </leaf>
    <leaf name="powerIsOn">
      <type name="boolean"/>
      <description>
        <text>Power ON. Activation of the entire radio in a split mount configuration shall be expressed as a 'true'.</text>
      </description>
      <default value="true"/>
    </leaf>
    <leaf name="transmitterIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of the transmitter inside the radio shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="receiverIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of the receiver inside the radio shall be expressed as a 'true'. Attribute shall also be used for RX main and RX diversity squelches in case of diversity configurations.
Maintenance Feature</text>
      </description>
      <default value="true"/>
    </leaf>
    <leaf name="txPower">
      <type name="int8"/>
      <description>
        <text>Transmit power to be configured on the microwave link. Signed Byte is required. The actually operated transmit power might be lower depending on adaptive modulation and ATPC.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="adaptiveModulationIsOn">
      <type name="boolean"/>
      <description>
        <text>Adaptive Modulation. Activation of adaptive modulation shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="modulationMin">
      <type name="int16"/>
      <description>
        <text>Minimum modulation to be configured (in case adaptive modulation is not used, this value represents also the fixed modulation). The modulation scheme shall be described by the number of symbols (e.g. BPSK-&gt;'2' or 256QAM-&gt;'256'). Allowed values are defined in TypeDefinitions::transmissionModeType::modulationScheme.</text>
      </description>
      <units name="symbols"/>
      <default value="-1"/>
    </leaf>
    <leaf name="modulationMax">
      <type name="int16"/>
      <description>
        <text>Maximum modulation to be configured. The value of this field is only relevant, if Adaptive Modulation has been activated. The modulation scheme shall be described by the number of symbols (e.g. BPSK-&gt;'2' or 256QAM-&gt;'256'). Allowed values are defined in TypeDefinitions::transmissionModeType::modulationScheme.</text>
      </description>
      <units name="symbols"/>
      <default value="-1"/>
    </leaf>
    <leaf name="xpicIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of Cross Polarization Interference Cancelation shall be expressed as a 'true'. In case XPIC is not available for the current combination of channel bandwidth and modulation or the hardware in general, this parameter shall always be set to 'false'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mimoIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of Multiple Input Multiple Output (MIMO) shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="alicIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of Adjacent Link Interference Cancelation (ALIC) shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="atpcIsOn">
      <type name="boolean"/>
      <description>
        <text>ATPC. Activation of Automated Transmit Power Control shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="atpcThreshUpper">
      <type name="int16"/>
      <description>
        <text>If the receive level is higher than the upper threshold value, the transmitter is notified to decrease transmit power.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="atpcThreshLower">
      <type name="int16"/>
      <description>
        <text>If the receive level is lower than the lower threshold value, the transmitter is notified to increase transmit power.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="autoFreqSelectIsOn">
      <type name="boolean"/>
      <description>
        <text>Activation of automatically selecting the transmit frequency in unlicensed bands shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="autoFreqSelectRange">
      <type name="int8"/>
      <description>
        <text>Number of transmit channels (starting at the center frequency defined in txFrequency and with channel bandwidth according to txChannelBandwidth) that define the range within the transmit frequency can automatically been chosen. </text>
      </description>
      <units name="channels"/>
      <default value="-1"/>
    </leaf>
    <leaf name="modulationIsOn">
      <type name="boolean"/>
      <description>
        <text>De-activation of the modulation of the carrier signal for fault management shall be expressed as a 'false'.
Maintenance Feature</text>
      </description>
      <default value="true"/>
    </leaf>
    <leaf name="encryptionIsOn">
      <type name="boolean"/>
      <description>
        <text>Activates encryption of the payload.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="cryptographicKey">
      <type name="string"/>
      <description>
        <text>Key for transforming plaintext into ciphertext data.</text>
      </description>
      <default value="Cryptographic key not yet defined."/>
    </leaf>
    <leaf name="loopBackIsOn">
      <type name="boolean"/>
      <description>
        <text>If this attribute is set to 'true', the received IF signal is transmitted back to the remote end.
Maintenance Feature</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="maintenanceTimer">
      <type name="int32"/>
      <description>
        <text>Time of existence of any maintenance configuration (e.g. the loop back of microwave header information). Valid values are defined in AirInterface::AirInterfaceCapability::maintenanceTimerRange.</text>
      </description>
      <units name="s"/>
      <default value="-1"/>
    </leaf>
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceProblemSeverityType"/>
      <min-elements value="6"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceStatus">
    <description>
      <text>Measurements of current values on the air interface and operational status of the device.</text>
    </description>
    <leaf name="txFrequencyCur">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Center frequency of the currently operated transmit channel.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="rxFrequencyCur">
      <type name="int32"/>
      <config value="false"/>
      <description>
        <text>Center frequency of the currently operated receive channel.</text>
      </description>
      <units name="kHz"/>
      <default value="-1"/>
    </leaf>
    <leaf name="txLevelCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Current transmit level.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="rxLevelCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Current receive level.</text>
      </description>
      <units name="dBm"/>
      <default value="99"/>
    </leaf>
    <leaf name="modulationCur">
      <type name="int16"/>
      <config value="false"/>
      <description>
        <text>Currently operated modulation on transmit path. The modulation scheme shall be described by the number of symbols (e.g. BPSK-&gt;'2' or 256QAM-&gt;'256'). Allowed values are defined in TypeDefinitions::transmissionModeType::modulationScheme.</text>
      </description>
      <units name="symbols"/>
      <default value="-1"/>
    </leaf>
    <leaf name="informationRateCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Information rate of the currently operated coding scheme.</text>
      </description>
      <units name="%"/>
      <default value="-1"/>
    </leaf>
    <leaf name="snirCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Currently measured signal to (noise+interference) ratio.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="xpdCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Currently measured cross polarization discrimination.</text>
      </description>
      <units name="dB"/>
      <default value="-99"/>
    </leaf>
    <leaf name="rfTempCur">
      <type name="int8"/>
      <config value="false"/>
      <description>
        <text>Current temperature (in degree Celsius) of the radio module inside the outdoor unit.</text>
      </description>
      <units name="Celsius"/>
      <default value="-99"/>
    </leaf>
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time the Air Interface entered its current operational status. 
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
      <default value="20101120140000.0Z+1"/>
    </leaf>
    <leaf name="radioPowerIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If the radio unit has power and is switched on, this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="linkIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If connection is established to the remote site with the same linkID, this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="xpicIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If XPIC is currently actually working (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="mimoIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If MIMO is currently actually working (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="alicIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If Adjacent Link Interference Cancelation (ALIC) is currently actually working (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="atpcIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If ATPC is currently actually working (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="autoFreqSelectIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If automated frequency selection is currently actually working (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="loopBackIsUp">
      <type name="boolean"/>
      <config value="false"/>
      <description>
        <text>If loop back of the air interface header is currently active (not just configured), this shall be expressed as a 'true'.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="localEndPointId">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>The value of the localEndPointId is a vendor specific identifier of the air interface, used by the node to discover a microwave radio link.</text>
      </description>
      <default value="not-supported"/>
    </leaf>
    <leaf name="remoteEndPointId">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>The value of the remoteEndPointId is a vendor specific identifier or the airinterface at the remote side, used to by the node to discover a microwave radio link.</text>
      </description>
      <default value="not-supported"/>
    </leaf>
  </grouping>
  <grouping name="AirInterfaceCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceCurrentPerformance">
    <description>
      <text>Aggregated performance information of the air interface at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <description>
        <text>At least values of the counters, which are reset every 15 minutes, are to be provided. If available, the current values of the counters, which are reset every 24 hour, can be provided, too.</text>
      </description>
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="AirInterfaceHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the air interface for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:airInterfaceHistoricalPerformanceType"/>
    </list>
  </grouping>
  <list name="CoChannelGroup">
    <description>
      <text>Required for configuring XPIC, MIMO and ALIC.</text>
    </description>
    <key value="coChannelGroupId"/>
    <config value="true"/>
    <leaf name="coChannelGroupId">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
    </leaf>
    <leaf-list name="airInterfaceList">
      <description>
        <text>List of air interfaces, which are part of the co-channel (XPIC, MIMO, ALIC) group.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
    </leaf-list>
    <leaf name="sortOfCoChannelGroup">
      <type name="string"/>
      <description>
        <text>Type of group of air interfaces with the same transmit and receive frequency. The values shall be chosen from the following _list:'XPIC', 'MIMO', 'ALIC';</text>
      </description>
    </leaf>
  </list>
</module>


<module name="MicrowaveModel-ObjectClasses-TdmContainer"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-TdmContainer="uri:onf:MicrowaveModel-ObjectClasses-TdmContainer"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-TdmContainer"/>
  <prefix value="MicrowaveModel-ObjectClasses-TdmContainer"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-09-02">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <feature name="hybrid-microwave">
    <description>
      <text>Feature 'hybrid-microwave' is mandatory for device types transporting Ethernet + TDM.</text>
    </description>
  </feature>
  <list name="MW_TdmContainer_Pac">
    <description>
      <text>LTP(Client)</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="tdmContainerCapability">
      <config value="false"/>
      <uses name="TdmContainerCapability"/>
    </container>
    <container name="tdmContainerConfiguration">
      <config value="true"/>
      <uses name="TdmContainerConfiguration"/>
    </container>
    <container name="tdmContainerStatus">
      <config value="false"/>
      <uses name="TdmContainerStatus"/>
    </container>
    <container name="tdmContainerCurrentProblems">
      <config value="false"/>
      <uses name="TdmContainerCurrentProblems"/>
    </container>
    <container name="tdmContainerCurrentPerformance">
      <config value="false"/>
      <uses name="TdmContainerCurrentPerformance"/>
    </container>
    <container name="tdmContainerHistoricalPerformances">
      <config value="false"/>
      <uses name="TdmContainerHistoricalPerformances"/>
    </container>
  </list>
  <grouping name="TdmContainerCapability">
    <description>
      <text>Bundling is not available.</text>
    </description>
    <list name="supportedTdmContainerTypesList">
      <description>
        <text>Lists the TDM containers that are supported.</text>
      </description>
      <key value="tdmContainerName"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmContainerType"/>
      <min-elements value="1"/>
    </list>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:'framingIsFaulty' and 'containerIsDown'. Further alarms might be added by the device.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="TdmContainerConfiguration">
    <leaf name="containerID">
      <type name="string"/>
      <description>
        <text>ContainterID in Netconf must be the same as EthernetPortID in OpenFlow so a connection can be made between the two items, which separately exist in the controller.</text>
      </description>
    </leaf>
    <container name="containerType">
      <description>
        <text>Type of TDM container.</text>
      </description>
      <config value="true"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmContainerType"/>
    </container>
    <container name="segmentID">
      <description>
        <text>Multiplicity = 1; One segment per TDM container; Type of segment must match type of container;</text>
      </description>
      <config value="true"/>
      <uses name="MicrowaveModel-TypeDefinitions:segmentIDType"/>
    </container>
    <list name="problemKindSeverityList">
      <description>
        <text>Severity of the problem to be configured.</text>
      </description>
      <key value="problemKindName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerProblemSeverityType"/>
      <min-elements value="2"/>
    </list>
  </grouping>
  <grouping name="TdmContainerStatus">
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time the Container entered its current operational status. 
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
      <default value="20101120140000.0Z+1"/>
    </leaf>
  </grouping>
  <grouping name="TdmContainerCurrentProblems">
    <list name="currentProblemList">
      <key value="sequenceNumber"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerCurrentProblemType"/>
    </list>
  </grouping>
  <grouping name="TdmContainerCurrentPerformance">
    <description>
      <text>Aggregated performance information of the TDM container at a particular moment.</text>
    </description>
    <list name="currentPerformanceDataList">
      <description>
        <text>At least values of the counters, which are reset every 15 minutes, are to be provided. If available, the current values of the counters, which are reset every 24 hour, can be provided, too.</text>
      </description>
      <key value="scannerId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerCurrentPerformanceType"/>
      <max-elements value="2"/>
      <min-elements value="1"/>
    </list>
  </grouping>
  <grouping name="TdmContainerHistoricalPerformances">
    <description>
      <text>Aggregated performance information of the TDM container for a pre-defined measurement interval.</text>
    </description>
    <list name="historicalPerformanceDataList">
      <key value="historyDataId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:containerHistoricalPerformanceType"/>
    </list>
  </grouping>
</module>


<module name="G_874_1_model-Imported_Information_Object_Classes-Q_822"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-Q_822="uri:onf:G_874_1_model-Imported_Information_Object_Classes-Q_822"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-X_739="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_739"
        xmlns:G_874_1_model-Imported_Information_Object_Classes-X_721="uri:onf:G_874_1_model-Imported_Information_Object_Classes-X_721"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions"
        xmlns:G_874_1_model-Type_Definitions="uri:onf:G_874_1_model-Type_Definitions">
  <namespace uri="uri:onf:G_874_1_model-Imported_Information_Object_Classes-Q_822"/>
  <prefix value="G_874_1_model-Imported_Information_Object_Classes-Q_822"/>
  <import module="G_874_1_model-Imported_Information_Object_Classes-X_739">
    <prefix value="G_874_1_model-Imported_Information_Object_Classes-X_739"/>
  </import>
  <import module="G_874_1_model-Imported_Information_Object_Classes-X_721">
    <prefix value="G_874_1_model-Imported_Information_Object_Classes-X_721"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <import module="G_874_1_model-Type_Definitions">
    <prefix value="G_874_1_model-Type_Definitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-11">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <list name="Q_822_CurrentData">
    <key value="scannerId"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="Q_822_CurrentData"/>
  </list>
  <grouping name="Q_822_CurrentData">
    <uses name="G_874_1_model-Imported_Information_Object_Classes-X_739:X_739_Scanner"/>
    <leaf name="suspectIntervalFlag">
      <type name="boolean"/>
      <description>
        <text>This attribute is used to indicate that the performance data for the current period may not be reliable. Some reasons for this to occur are:- Suspect data were detected by the actual resource doing data collection.- Transition of the administrativeState attribute to/from the 'lock' state.- Transition of the operationalState to/from the 'disabled' state.- Scheduler setting that inhibits the collection function.- The performance counters were reset during the interval.- The currentData (or subclass) object instance was created during the monitoring period.</text>
      </description>
      <default value="false"/>
    </leaf>
    <leaf name="elapsedTime">
      <type name="int32"/>
    </leaf>
  </grouping>
  <list name="Q_822_HistoryData">
    <key value="historyDataId"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="Q_822_HistoryData"/>
  </list>
  <grouping name="Q_822_HistoryData">
    <uses name="G_874_1_model-Imported_Information_Object_Classes-X_721:X_721_Top"/>
    <leaf name="historyDataId">
      <type name="string"/>
    </leaf>
    <leaf name="periodEndTime">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
    </leaf>
    <leaf name="granularityPeriod">
      <type name="G_874_1_model-Type_Definitions:GranularityPeriodType"/>
    </leaf>
  </grouping>
</module>


<module name="MicrowaveModel-Notifications"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-Notifications="uri:onf:MicrowaveModel-Notifications"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions">
  <namespace uri="uri:onf:MicrowaveModel-Notifications"/>
  <prefix value="MicrowaveModel-Notifications"/>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-08-09">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <notification name="ObjectCreationNotification">
    <description>
      <text>To be sent when a new MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac has to be instancieted in the controller.</text>
    </description>
    <leaf name="counter">
      <type name="int32"/>
      <description>
        <text>Counts object creation notifications.</text>
      </description>
    </leaf>
    <leaf name="timeStamp">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
    </leaf>
    <leaf name="objectIdRef">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <description>
        <text>ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.</text>
      </description>
    </leaf>
    <leaf name="objectType">
      <type name="string"/>
      <description>
        <text>Type of Object to be chosen from the following list of values: 'MW_AirInterface_Pac', 'MW_AirInterfaceDiversity_Pac', 'MW_Structure_Pac', 'MW_PureEthernetStructure_Pac', 'MW_HybridMwStructure_Pac', 'MW_Container_Pac', 'MW_EthernetContainer_Pac' or 'MW_TdmContainer_Pac'.</text>
      </description>
    </leaf>
  </notification>
  <notification name="ObjectDeletionNotification">
    <description>
      <text>To be sent when a new MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac instance has to be deleted in the controller.</text>
    </description>
    <leaf name="counter">
      <type name="int32"/>
      <description>
        <text>Counts object deletion notifications.</text>
      </description>
    </leaf>
    <leaf name="timeStamp">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
    </leaf>
    <leaf name="objectIdRef">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <description>
        <text>ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.</text>
      </description>
    </leaf>
  </notification>
  <notification name="AttributeValueChangedNotification">
    <description>
      <text>To be sent when an attribute has changed and one or more controllers have to update their data.</text>
    </description>
    <leaf name="counter">
      <type name="int32"/>
      <description>
        <text>Counts attribute value changed notifications.</text>
      </description>
    </leaf>
    <leaf name="timeStamp">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
    </leaf>
    <leaf name="objectIdRef">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <description>
        <text>ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.</text>
      </description>
    </leaf>
    <leaf name="attributeName">
      <type name="string"/>
      <description>
        <text>Name of the attribute that has been changed.</text>
      </description>
    </leaf>
    <leaf name="newValue">
      <type name="string"/>
      <description>
        <text>Attribute value converted to a string (xml, json, ...)</text>
      </description>
    </leaf>
  </notification>
  <notification name="ProblemNotification">
    <description>
      <text>To be sent when a problem occurs at a MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.</text>
    </description>
    <leaf name="counter">
      <type name="int32"/>
      <description>
        <text>Counts problem notifications</text>
      </description>
    </leaf>
    <leaf name="timeStamp">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
    </leaf>
    <leaf name="objectIdRef">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <description>
        <text>ID of the affected MW_AirInterface_Pac, MW_AirInterfaceDiversity_Pac, MW_Structure_Pac, MW_PureEthernetStructure_Pac, MW_HybridMwStructure_Pac, MW_Container_Pac, MW_EthernetContainer_Pac or MW_TdmContainer_Pac.</text>
      </description>
    </leaf>
    <leaf name="problem">
      <type name="string"/>
      <description>
        <text>Name of the problem according to AirInterface::AirInterfaceCapability::supportedAlarms or AirInterfaceDiversity::AirInterfaceDiversityCapability::supportedAlarms or Structure::StructureCapability::supportedAlarms or PureEthernetStructure::PureEthernetStructureCapability::supportedAlarms or HybridMwStructure::HybridMwStructureCapability::supportedAlarms or Container::ContainerCapability::supportedAlarms or EthernetContainer::EthernetContainerCapability::supportedAlarms or TdmContainer::TdmContainerCapability::supportedAlarms.</text>
      </description>
    </leaf>
    <leaf name="severity">
      <type name="MicrowaveModel-TypeDefinitions:severityType"/>
      <description>
        <text>Severity of the problem according to AirInterface::AirInterfaceConfiguration::problemSeverityList, AirInterfaceDiversity::AirInterfaceDiversityConfiguration::problemSeverityList, Structure::StructureConfiguration::problemSeverityList, PureEthernetStructure::PureEthernetStructureConfiguration::problemSeverityList, HybridMwStructure::HybridMwStructureConfiguration::problemSeverityList, Container::ContainerConfiguration::problemSeverityList, EthernetContainer::EthernetContainerConfiguration::problemSeverityList or TdmContainer::TdmContainerConfiguration::problemSeverityList</text>
      </description>
    </leaf>
  </notification>
</module>

</modules>
