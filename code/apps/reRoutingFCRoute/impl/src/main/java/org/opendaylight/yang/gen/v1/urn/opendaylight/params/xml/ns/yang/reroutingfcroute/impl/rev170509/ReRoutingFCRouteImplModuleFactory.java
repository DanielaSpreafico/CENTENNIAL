/*
* Generated file
*
* Generated from: yang module name: reRoutingFCRoute-impl-cfg yang module local name: re-routing-fcroute-impl
* Generated by: org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator
* Generated at: Tue May 09 19:22:24 CST 2017
*
* Do not modify this file unless it is present under src/main directory
*/
package org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.reroutingfcroute.impl.rev170509;

import org.opendaylight.controller.config.api.DependencyResolver;
import org.opendaylight.controller.config.api.DynamicMBeanWithInstance;
import org.opendaylight.controller.config.api.ModuleIdentifier;
import org.osgi.framework.BundleContext;

import javax.management.ObjectName;

public class ReRoutingFCRouteImplModuleFactory extends org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.reroutingfcroute.impl.rev170509.AbstractReRoutingFCRouteImplModuleFactory
{
    @Override
    public ReRoutingFCRouteImplModule instantiateModule(
            String instanceName, DependencyResolver dependencyResolver, ReRoutingFCRouteImplModule oldModule,
            AutoCloseable oldInstance, BundleContext bundleContext)
    {
        ReRoutingFCRouteImplModule module = super.instantiateModule(
                instanceName, dependencyResolver, oldModule, oldInstance, bundleContext);
        module.setBundleContext(bundleContext);
        return module;
    }

    @Override
    public org.opendaylight.controller.config.spi.Module createModule(
            String instanceName, DependencyResolver dependencyResolver, DynamicMBeanWithInstance old,
            BundleContext bundleContext) throws Exception
    {
        ReRoutingFCRouteImplModule oldModule;
        try
        {
            oldModule = (ReRoutingFCRouteImplModule) old.getModule();
        }
        catch (Exception e)
        {
            ReRoutingFCRouteImplModule newModule = handleChangedClass(old, dependencyResolver);
            old.getInstance().close();
            return newModule;
        }
        ReRoutingFCRouteImplModule module = instantiateModule(
                instanceName, dependencyResolver, oldModule, old.getInstance(), bundleContext);
        module.setRpcRegistry(oldModule.getRpcRegistry());
        module.setBroker(oldModule.getBroker());
        module.setListenService(oldModule.getListenService());

        return module;
    }

    @Override
    public ReRoutingFCRouteImplModule instantiateModule(
            String instanceName, DependencyResolver dependencyResolver, BundleContext bundleContext)
    {
        ReRoutingFCRouteImplModule module = super.instantiateModule(instanceName, dependencyResolver, bundleContext);
        module.setBundleContext(bundleContext);
        return module;
    }

    public ReRoutingFCRouteImplModule handleChangedClass(
            DynamicMBeanWithInstance old, DependencyResolver dependencyResolver) throws Exception
    {
        String instanceName = old.getModule().getIdentifier().getInstanceName();
        ReRoutingFCRouteImplModule newModule = new ReRoutingFCRouteImplModule(
                new ModuleIdentifier(NAME, instanceName), dependencyResolver);
        newModule.setListenService((ObjectName) old.getAttribute(
                AbstractReRoutingFCRouteImplModule.listenServiceJmxAttribute.getAttributeName()));
        newModule.setBroker((ObjectName) old.getAttribute(
                AbstractReRoutingFCRouteImplModule.brokerJmxAttribute.getAttributeName()));
        newModule.setRpcRegistry((ObjectName) old.getAttribute(
                AbstractReRoutingFCRouteImplModule.rpcRegistryJmxAttribute.getAttributeName()));
        return newModule;
    }
}
